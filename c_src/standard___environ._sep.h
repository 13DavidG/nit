/* This C header file is generated by NIT to compile modules and programs that requires ./../lib/standard/environ. */
#ifndef standard___environ_sep
#define standard___environ_sep
#include "standard___symbol._sep.h"
#include <nit_common.h>
#include "environ._nitni.h"
extern const char *LOCATE_standard___environ;
extern const int SFT_standard___environ[];
#define CALL_standard___environ___Symbol___environ(recv) ((standard___environ___Symbol___environ_t)CALL((recv), (SFT_standard___environ[0] + 0)))
#define CALL_standard___environ___NativeString___get_environ(recv) ((standard___environ___NativeString___get_environ_t)CALL((recv), (SFT_standard___environ[1] + 0)))
static const char * const LOCATE_standard___environ___Symbol___environ = "environ::Symbol::environ";
val_t standard___environ___Symbol___environ(val_t p0);
typedef val_t (*standard___environ___Symbol___environ_t)(val_t p0);
val_t NEW_Symbol_standard___symbol___Symbol___init(val_t p0);
static const char * const LOCATE_standard___environ___NativeString___get_environ = "environ::NativeString::get_environ";
val_t standard___environ___NativeString___get_environ(val_t p0);
typedef val_t (*standard___environ___NativeString___get_environ_t)(val_t p0);
val_t NEW_NativeString_standard___string___NativeString___init();
#endif
