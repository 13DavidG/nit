#include "nit.common.h"
long lexer__TEol__parser_index(val* self);
#define COLOR_parser_nodes__ANode___location 0
void lexer__TEol__init_tk(val* self, val* p0);
long lexer__TComment__parser_index(val* self);
void lexer__TComment__init_tk(val* self, val* p0);
long lexer__TKwpackage__parser_index(val* self);
void lexer__TKwpackage__init_tk(val* self, val* p0);
long lexer__TKwmodule__parser_index(val* self);
void lexer__TKwmodule__init_tk(val* self, val* p0);
long lexer__TKwimport__parser_index(val* self);
void lexer__TKwimport__init_tk(val* self, val* p0);
long lexer__TKwclass__parser_index(val* self);
void lexer__TKwclass__init_tk(val* self, val* p0);
long lexer__TKwabstract__parser_index(val* self);
void lexer__TKwabstract__init_tk(val* self, val* p0);
long lexer__TKwinterface__parser_index(val* self);
void lexer__TKwinterface__init_tk(val* self, val* p0);
long lexer__TKwenum__parser_index(val* self);
void lexer__TKwenum__init_tk(val* self, val* p0);
long lexer__TKwend__parser_index(val* self);
void lexer__TKwend__init_tk(val* self, val* p0);
long lexer__TKwmeth__parser_index(val* self);
void lexer__TKwmeth__init_tk(val* self, val* p0);
long lexer__TKwtype__parser_index(val* self);
void lexer__TKwtype__init_tk(val* self, val* p0);
long lexer__TKwinit__parser_index(val* self);
void lexer__TKwinit__init_tk(val* self, val* p0);
long lexer__TKwredef__parser_index(val* self);
void lexer__TKwredef__init_tk(val* self, val* p0);
long lexer__TKwis__parser_index(val* self);
void lexer__TKwis__init_tk(val* self, val* p0);
long lexer__TKwdo__parser_index(val* self);
void lexer__TKwdo__init_tk(val* self, val* p0);
long lexer__TKwreadable__parser_index(val* self);
void lexer__TKwreadable__init_tk(val* self, val* p0);
long lexer__TKwwritable__parser_index(val* self);
void lexer__TKwwritable__init_tk(val* self, val* p0);
long lexer__TKwvar__parser_index(val* self);
void lexer__TKwvar__init_tk(val* self, val* p0);
long lexer__TKwintern__parser_index(val* self);
void lexer__TKwintern__init_tk(val* self, val* p0);
long lexer__TKwextern__parser_index(val* self);
void lexer__TKwextern__init_tk(val* self, val* p0);
long lexer__TKwpublic__parser_index(val* self);
void lexer__TKwpublic__init_tk(val* self, val* p0);
long lexer__TKwprotected__parser_index(val* self);
void lexer__TKwprotected__init_tk(val* self, val* p0);
long lexer__TKwprivate__parser_index(val* self);
void lexer__TKwprivate__init_tk(val* self, val* p0);
long lexer__TKwintrude__parser_index(val* self);
void lexer__TKwintrude__init_tk(val* self, val* p0);
long lexer__TKwif__parser_index(val* self);
void lexer__TKwif__init_tk(val* self, val* p0);
long lexer__TKwthen__parser_index(val* self);
void lexer__TKwthen__init_tk(val* self, val* p0);
long lexer__TKwelse__parser_index(val* self);
void lexer__TKwelse__init_tk(val* self, val* p0);
long lexer__TKwwhile__parser_index(val* self);
void lexer__TKwwhile__init_tk(val* self, val* p0);
long lexer__TKwloop__parser_index(val* self);
void lexer__TKwloop__init_tk(val* self, val* p0);
long lexer__TKwfor__parser_index(val* self);
void lexer__TKwfor__init_tk(val* self, val* p0);
long lexer__TKwin__parser_index(val* self);
void lexer__TKwin__init_tk(val* self, val* p0);
long lexer__TKwand__parser_index(val* self);
void lexer__TKwand__init_tk(val* self, val* p0);
long lexer__TKwor__parser_index(val* self);
void lexer__TKwor__init_tk(val* self, val* p0);
long lexer__TKwnot__parser_index(val* self);
void lexer__TKwnot__init_tk(val* self, val* p0);
long lexer__TKwimplies__parser_index(val* self);
void lexer__TKwimplies__init_tk(val* self, val* p0);
long lexer__TKwreturn__parser_index(val* self);
void lexer__TKwreturn__init_tk(val* self, val* p0);
long lexer__TKwcontinue__parser_index(val* self);
void lexer__TKwcontinue__init_tk(val* self, val* p0);
long lexer__TKwbreak__parser_index(val* self);
void lexer__TKwbreak__init_tk(val* self, val* p0);
long lexer__TKwabort__parser_index(val* self);
void lexer__TKwabort__init_tk(val* self, val* p0);
long lexer__TKwassert__parser_index(val* self);
void lexer__TKwassert__init_tk(val* self, val* p0);
long lexer__TKwnew__parser_index(val* self);
void lexer__TKwnew__init_tk(val* self, val* p0);
long lexer__TKwisa__parser_index(val* self);
void lexer__TKwisa__init_tk(val* self, val* p0);
long lexer__TKwonce__parser_index(val* self);
void lexer__TKwonce__init_tk(val* self, val* p0);
long lexer__TKwsuper__parser_index(val* self);
void lexer__TKwsuper__init_tk(val* self, val* p0);
long lexer__TKwself__parser_index(val* self);
void lexer__TKwself__init_tk(val* self, val* p0);
long lexer__TKwtrue__parser_index(val* self);
void lexer__TKwtrue__init_tk(val* self, val* p0);
long lexer__TKwfalse__parser_index(val* self);
void lexer__TKwfalse__init_tk(val* self, val* p0);
long lexer__TKwnull__parser_index(val* self);
void lexer__TKwnull__init_tk(val* self, val* p0);
long lexer__TKwas__parser_index(val* self);
void lexer__TKwas__init_tk(val* self, val* p0);
long lexer__TKwnullable__parser_index(val* self);
void lexer__TKwnullable__init_tk(val* self, val* p0);
long lexer__TKwisset__parser_index(val* self);
void lexer__TKwisset__init_tk(val* self, val* p0);
long lexer__TKwlabel__parser_index(val* self);
void lexer__TKwlabel__init_tk(val* self, val* p0);
long lexer__TKwdebug__parser_index(val* self);
void lexer__TKwdebug__init_tk(val* self, val* p0);
long lexer__TOpar__parser_index(val* self);
void lexer__TOpar__init_tk(val* self, val* p0);
long lexer__TCpar__parser_index(val* self);
void lexer__TCpar__init_tk(val* self, val* p0);
long lexer__TObra__parser_index(val* self);
void lexer__TObra__init_tk(val* self, val* p0);
long lexer__TCbra__parser_index(val* self);
void lexer__TCbra__init_tk(val* self, val* p0);
long lexer__TComma__parser_index(val* self);
void lexer__TComma__init_tk(val* self, val* p0);
long lexer__TColumn__parser_index(val* self);
void lexer__TColumn__init_tk(val* self, val* p0);
long lexer__TQuad__parser_index(val* self);
void lexer__TQuad__init_tk(val* self, val* p0);
long lexer__TAssign__parser_index(val* self);
void lexer__TAssign__init_tk(val* self, val* p0);
long lexer__TPluseq__parser_index(val* self);
void lexer__TPluseq__init_tk(val* self, val* p0);
long lexer__TMinuseq__parser_index(val* self);
void lexer__TMinuseq__init_tk(val* self, val* p0);
long lexer__TDotdotdot__parser_index(val* self);
void lexer__TDotdotdot__init_tk(val* self, val* p0);
long lexer__TDotdot__parser_index(val* self);
void lexer__TDotdot__init_tk(val* self, val* p0);
long lexer__TDot__parser_index(val* self);
void lexer__TDot__init_tk(val* self, val* p0);
long lexer__TPlus__parser_index(val* self);
void lexer__TPlus__init_tk(val* self, val* p0);
long lexer__TMinus__parser_index(val* self);
void lexer__TMinus__init_tk(val* self, val* p0);
long lexer__TStar__parser_index(val* self);
void lexer__TStar__init_tk(val* self, val* p0);
long lexer__TSlash__parser_index(val* self);
void lexer__TSlash__init_tk(val* self, val* p0);
long lexer__TPercent__parser_index(val* self);
void lexer__TPercent__init_tk(val* self, val* p0);
long lexer__TEq__parser_index(val* self);
void lexer__TEq__init_tk(val* self, val* p0);
long lexer__TNe__parser_index(val* self);
void lexer__TNe__init_tk(val* self, val* p0);
long lexer__TLt__parser_index(val* self);
void lexer__TLt__init_tk(val* self, val* p0);
long lexer__TLe__parser_index(val* self);
void lexer__TLe__init_tk(val* self, val* p0);
long lexer__TLl__parser_index(val* self);
void lexer__TLl__init_tk(val* self, val* p0);
long lexer__TGt__parser_index(val* self);
void lexer__TGt__init_tk(val* self, val* p0);
long lexer__TGe__parser_index(val* self);
void lexer__TGe__init_tk(val* self, val* p0);
long lexer__TGg__parser_index(val* self);
void lexer__TGg__init_tk(val* self, val* p0);
long lexer__TStarship__parser_index(val* self);
void lexer__TStarship__init_tk(val* self, val* p0);
long lexer__TBang__parser_index(val* self);
void lexer__TBang__init_tk(val* self, val* p0);
long lexer__TAt__parser_index(val* self);
void lexer__TAt__init_tk(val* self, val* p0);
long lexer__TClassid__parser_index(val* self);
void lexer__TClassid__init_tk(val* self, val* p0);
long lexer__TId__parser_index(val* self);
void lexer__TId__init_tk(val* self, val* p0);
long lexer__TAttrid__parser_index(val* self);
void lexer__TAttrid__init_tk(val* self, val* p0);
long lexer__TNumber__parser_index(val* self);
void lexer__TNumber__init_tk(val* self, val* p0);
long lexer__THexNumber__parser_index(val* self);
void lexer__THexNumber__init_tk(val* self, val* p0);
long lexer__TFloat__parser_index(val* self);
void lexer__TFloat__init_tk(val* self, val* p0);
long lexer__TString__parser_index(val* self);
void lexer__TString__init_tk(val* self, val* p0);
long lexer__TStartString__parser_index(val* self);
void lexer__TStartString__init_tk(val* self, val* p0);
long lexer__TMidString__parser_index(val* self);
void lexer__TMidString__init_tk(val* self, val* p0);
long lexer__TEndString__parser_index(val* self);
void lexer__TEndString__init_tk(val* self, val* p0);
long lexer__TChar__parser_index(val* self);
void lexer__TChar__init_tk(val* self, val* p0);
long lexer__TBadString__parser_index(val* self);
void lexer__TBadString__init_tk(val* self, val* p0);
long lexer__TBadChar__parser_index(val* self);
void lexer__TBadChar__init_tk(val* self, val* p0);
long lexer__TExternCodeSegment__parser_index(val* self);
void lexer__TExternCodeSegment__init_tk(val* self, val* p0);
val* NEW_parser_nodes__TEol(const struct type* type);
extern const struct type type_parser_nodes__TEol;
val* NEW_parser_nodes__TComment(const struct type* type);
extern const struct type type_parser_nodes__TComment;
val* NEW_parser_nodes__TKwpackage(const struct type* type);
extern const struct type type_parser_nodes__TKwpackage;
val* NEW_parser_nodes__TKwmodule(const struct type* type);
extern const struct type type_parser_nodes__TKwmodule;
val* NEW_parser_nodes__TKwimport(const struct type* type);
extern const struct type type_parser_nodes__TKwimport;
val* NEW_parser_nodes__TKwclass(const struct type* type);
extern const struct type type_parser_nodes__TKwclass;
val* NEW_parser_nodes__TKwabstract(const struct type* type);
extern const struct type type_parser_nodes__TKwabstract;
val* NEW_parser_nodes__TKwinterface(const struct type* type);
extern const struct type type_parser_nodes__TKwinterface;
val* NEW_parser_nodes__TKwenum(const struct type* type);
extern const struct type type_parser_nodes__TKwenum;
val* NEW_parser_nodes__TKwend(const struct type* type);
extern const struct type type_parser_nodes__TKwend;
val* NEW_parser_nodes__TKwmeth(const struct type* type);
extern const struct type type_parser_nodes__TKwmeth;
val* NEW_parser_nodes__TKwtype(const struct type* type);
extern const struct type type_parser_nodes__TKwtype;
val* NEW_parser_nodes__TKwinit(const struct type* type);
extern const struct type type_parser_nodes__TKwinit;
val* NEW_parser_nodes__TKwredef(const struct type* type);
extern const struct type type_parser_nodes__TKwredef;
val* NEW_parser_nodes__TKwis(const struct type* type);
extern const struct type type_parser_nodes__TKwis;
val* NEW_parser_nodes__TKwdo(const struct type* type);
extern const struct type type_parser_nodes__TKwdo;
val* NEW_parser_nodes__TKwreadable(const struct type* type);
extern const struct type type_parser_nodes__TKwreadable;
val* NEW_parser_nodes__TKwwritable(const struct type* type);
extern const struct type type_parser_nodes__TKwwritable;
val* NEW_parser_nodes__TKwvar(const struct type* type);
extern const struct type type_parser_nodes__TKwvar;
val* NEW_parser_nodes__TKwintern(const struct type* type);
extern const struct type type_parser_nodes__TKwintern;
val* NEW_parser_nodes__TKwextern(const struct type* type);
extern const struct type type_parser_nodes__TKwextern;
val* NEW_parser_nodes__TKwpublic(const struct type* type);
extern const struct type type_parser_nodes__TKwpublic;
val* NEW_parser_nodes__TKwprotected(const struct type* type);
extern const struct type type_parser_nodes__TKwprotected;
val* NEW_parser_nodes__TKwprivate(const struct type* type);
extern const struct type type_parser_nodes__TKwprivate;
val* NEW_parser_nodes__TKwintrude(const struct type* type);
extern const struct type type_parser_nodes__TKwintrude;
val* NEW_parser_nodes__TKwif(const struct type* type);
extern const struct type type_parser_nodes__TKwif;
val* NEW_parser_nodes__TKwthen(const struct type* type);
extern const struct type type_parser_nodes__TKwthen;
val* NEW_parser_nodes__TKwelse(const struct type* type);
extern const struct type type_parser_nodes__TKwelse;
val* NEW_parser_nodes__TKwwhile(const struct type* type);
extern const struct type type_parser_nodes__TKwwhile;
val* NEW_parser_nodes__TKwloop(const struct type* type);
extern const struct type type_parser_nodes__TKwloop;
val* NEW_parser_nodes__TKwfor(const struct type* type);
extern const struct type type_parser_nodes__TKwfor;
val* NEW_parser_nodes__TKwin(const struct type* type);
extern const struct type type_parser_nodes__TKwin;
val* NEW_parser_nodes__TKwand(const struct type* type);
extern const struct type type_parser_nodes__TKwand;
val* NEW_parser_nodes__TKwor(const struct type* type);
extern const struct type type_parser_nodes__TKwor;
val* NEW_parser_nodes__TKwnot(const struct type* type);
extern const struct type type_parser_nodes__TKwnot;
val* NEW_parser_nodes__TKwimplies(const struct type* type);
extern const struct type type_parser_nodes__TKwimplies;
val* NEW_parser_nodes__TKwreturn(const struct type* type);
extern const struct type type_parser_nodes__TKwreturn;
val* NEW_parser_nodes__TKwcontinue(const struct type* type);
extern const struct type type_parser_nodes__TKwcontinue;
val* NEW_parser_nodes__TKwbreak(const struct type* type);
extern const struct type type_parser_nodes__TKwbreak;
val* NEW_parser_nodes__TKwabort(const struct type* type);
extern const struct type type_parser_nodes__TKwabort;
val* NEW_parser_nodes__TKwassert(const struct type* type);
extern const struct type type_parser_nodes__TKwassert;
val* NEW_parser_nodes__TKwnew(const struct type* type);
extern const struct type type_parser_nodes__TKwnew;
val* NEW_parser_nodes__TKwisa(const struct type* type);
extern const struct type type_parser_nodes__TKwisa;
val* NEW_parser_nodes__TKwonce(const struct type* type);
extern const struct type type_parser_nodes__TKwonce;
val* NEW_parser_nodes__TKwsuper(const struct type* type);
extern const struct type type_parser_nodes__TKwsuper;
val* NEW_parser_nodes__TKwself(const struct type* type);
extern const struct type type_parser_nodes__TKwself;
val* NEW_parser_nodes__TKwtrue(const struct type* type);
extern const struct type type_parser_nodes__TKwtrue;
val* NEW_parser_nodes__TKwfalse(const struct type* type);
extern const struct type type_parser_nodes__TKwfalse;
val* NEW_parser_nodes__TKwnull(const struct type* type);
extern const struct type type_parser_nodes__TKwnull;
val* NEW_parser_nodes__TKwas(const struct type* type);
extern const struct type type_parser_nodes__TKwas;
val* NEW_parser_nodes__TKwnullable(const struct type* type);
extern const struct type type_parser_nodes__TKwnullable;
val* NEW_parser_nodes__TKwisset(const struct type* type);
extern const struct type type_parser_nodes__TKwisset;
val* NEW_parser_nodes__TKwlabel(const struct type* type);
extern const struct type type_parser_nodes__TKwlabel;
val* NEW_parser_nodes__TKwdebug(const struct type* type);
extern const struct type type_parser_nodes__TKwdebug;
val* NEW_parser_nodes__TOpar(const struct type* type);
extern const struct type type_parser_nodes__TOpar;
val* NEW_parser_nodes__TCpar(const struct type* type);
extern const struct type type_parser_nodes__TCpar;
val* NEW_parser_nodes__TObra(const struct type* type);
extern const struct type type_parser_nodes__TObra;
val* NEW_parser_nodes__TCbra(const struct type* type);
extern const struct type type_parser_nodes__TCbra;
val* NEW_parser_nodes__TComma(const struct type* type);
extern const struct type type_parser_nodes__TComma;
val* NEW_parser_nodes__TColumn(const struct type* type);
extern const struct type type_parser_nodes__TColumn;
val* NEW_parser_nodes__TQuad(const struct type* type);
extern const struct type type_parser_nodes__TQuad;
val* NEW_parser_nodes__TAssign(const struct type* type);
extern const struct type type_parser_nodes__TAssign;
val* NEW_parser_nodes__TPluseq(const struct type* type);
extern const struct type type_parser_nodes__TPluseq;
val* NEW_parser_nodes__TMinuseq(const struct type* type);
extern const struct type type_parser_nodes__TMinuseq;
val* NEW_parser_nodes__TDotdotdot(const struct type* type);
extern const struct type type_parser_nodes__TDotdotdot;
val* NEW_parser_nodes__TDotdot(const struct type* type);
extern const struct type type_parser_nodes__TDotdot;
val* NEW_parser_nodes__TDot(const struct type* type);
extern const struct type type_parser_nodes__TDot;
val* NEW_parser_nodes__TPlus(const struct type* type);
extern const struct type type_parser_nodes__TPlus;
val* NEW_parser_nodes__TMinus(const struct type* type);
extern const struct type type_parser_nodes__TMinus;
val* NEW_parser_nodes__TStar(const struct type* type);
extern const struct type type_parser_nodes__TStar;
val* NEW_parser_nodes__TSlash(const struct type* type);
extern const struct type type_parser_nodes__TSlash;
val* NEW_parser_nodes__TPercent(const struct type* type);
extern const struct type type_parser_nodes__TPercent;
val* NEW_parser_nodes__TEq(const struct type* type);
extern const struct type type_parser_nodes__TEq;
val* NEW_parser_nodes__TNe(const struct type* type);
extern const struct type type_parser_nodes__TNe;
val* NEW_parser_nodes__TLt(const struct type* type);
extern const struct type type_parser_nodes__TLt;
val* NEW_parser_nodes__TLe(const struct type* type);
extern const struct type type_parser_nodes__TLe;
val* NEW_parser_nodes__TLl(const struct type* type);
extern const struct type type_parser_nodes__TLl;
val* NEW_parser_nodes__TGt(const struct type* type);
extern const struct type type_parser_nodes__TGt;
val* NEW_parser_nodes__TGe(const struct type* type);
extern const struct type type_parser_nodes__TGe;
val* NEW_parser_nodes__TGg(const struct type* type);
extern const struct type type_parser_nodes__TGg;
val* NEW_parser_nodes__TStarship(const struct type* type);
extern const struct type type_parser_nodes__TStarship;
val* NEW_parser_nodes__TBang(const struct type* type);
extern const struct type type_parser_nodes__TBang;
val* NEW_parser_nodes__TAt(const struct type* type);
extern const struct type type_parser_nodes__TAt;
val* NEW_parser_nodes__TClassid(const struct type* type);
extern const struct type type_parser_nodes__TClassid;
val* NEW_parser_nodes__TId(const struct type* type);
extern const struct type type_parser_nodes__TId;
val* NEW_parser_nodes__TAttrid(const struct type* type);
extern const struct type type_parser_nodes__TAttrid;
val* NEW_parser_nodes__TNumber(const struct type* type);
extern const struct type type_parser_nodes__TNumber;
val* NEW_parser_nodes__THexNumber(const struct type* type);
extern const struct type type_parser_nodes__THexNumber;
val* NEW_parser_nodes__TFloat(const struct type* type);
extern const struct type type_parser_nodes__TFloat;
val* NEW_parser_nodes__TString(const struct type* type);
extern const struct type type_parser_nodes__TString;
val* NEW_parser_nodes__TStartString(const struct type* type);
extern const struct type type_parser_nodes__TStartString;
val* NEW_parser_nodes__TMidString(const struct type* type);
extern const struct type type_parser_nodes__TMidString;
val* NEW_parser_nodes__TEndString(const struct type* type);
extern const struct type type_parser_nodes__TEndString;
val* NEW_parser_nodes__TChar(const struct type* type);
extern const struct type type_parser_nodes__TChar;
val* NEW_parser_nodes__TBadString(const struct type* type);
extern const struct type type_parser_nodes__TBadString;
val* NEW_parser_nodes__TBadChar(const struct type* type);
extern const struct type type_parser_nodes__TBadChar;
val* NEW_parser_nodes__TExternCodeSegment(const struct type* type);
extern const struct type type_parser_nodes__TExternCodeSegment;
val* lexer__Lexer__make_token(val* self, long p0, val* p1);
