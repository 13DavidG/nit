/* This C header file is generated by NIT to compile modules and programs that requires ./metamodel/abstractmetamodel. */
#ifndef metamodel___abstractmetamodel_sep
#define metamodel___abstractmetamodel_sep
#include "metamodel___partial_order._sep.h"
#include "location._sep.h"
#include <nit_common.h>

extern const classtable_elt_t VFT_metamodel___abstractmetamodel___MMContext[];

extern const classtable_elt_t VFT_metamodel___abstractmetamodel___MMDirectory[];

extern const classtable_elt_t VFT_metamodel___abstractmetamodel___MMModule[];

extern const classtable_elt_t VFT_metamodel___abstractmetamodel___MMGlobalClass[];

extern const classtable_elt_t VFT_metamodel___abstractmetamodel___MMLocalClass[];

extern const classtable_elt_t VFT_metamodel___abstractmetamodel___MMGlobalProperty[];

extern const classtable_elt_t VFT_metamodel___abstractmetamodel___MMLocalProperty[];

extern const classtable_elt_t VFT_metamodel___abstractmetamodel___MMAttribute[];

extern const classtable_elt_t VFT_metamodel___abstractmetamodel___MMMethod[];

extern const classtable_elt_t VFT_metamodel___abstractmetamodel___MMConcreteClass[];
extern const char *LOCATE_metamodel___abstractmetamodel;
extern const int SFT_metamodel___abstractmetamodel[];
#define ID_metamodel___abstractmetamodel___MMContext (SFT_metamodel___abstractmetamodel[0])
#define COLOR_metamodel___abstractmetamodel___MMContext (SFT_metamodel___abstractmetamodel[1])
#define ATTR_metamodel___abstractmetamodel___MMContext____module_hierarchy(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[2] + 0))
#define ATTR_metamodel___abstractmetamodel___MMContext____class_hierarchy(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[2] + 1))
#define ATTR_metamodel___abstractmetamodel___MMContext____global_classes(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[2] + 2))
#define ATTR_metamodel___abstractmetamodel___MMContext____modules(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[2] + 3))
#define INIT_TABLE_POS_metamodel___abstractmetamodel___MMContext (SFT_metamodel___abstractmetamodel[3] + 0)
#define CALL_metamodel___abstractmetamodel___MMContext___init(recv) ((metamodel___abstractmetamodel___MMContext___init_t)CALL((recv), (SFT_metamodel___abstractmetamodel[3] + 1)))
#define CALL_metamodel___abstractmetamodel___MMContext___module_hierarchy(recv) ((metamodel___abstractmetamodel___MMContext___module_hierarchy_t)CALL((recv), (SFT_metamodel___abstractmetamodel[3] + 2)))
#define CALL_metamodel___abstractmetamodel___MMContext___class_hierarchy(recv) ((metamodel___abstractmetamodel___MMContext___class_hierarchy_t)CALL((recv), (SFT_metamodel___abstractmetamodel[3] + 3)))
#define CALL_metamodel___abstractmetamodel___MMContext___modules(recv) ((metamodel___abstractmetamodel___MMContext___modules_t)CALL((recv), (SFT_metamodel___abstractmetamodel[3] + 4)))
#define CALL_metamodel___abstractmetamodel___MMContext___add_module(recv) ((metamodel___abstractmetamodel___MMContext___add_module_t)CALL((recv), (SFT_metamodel___abstractmetamodel[3] + 5)))
#define CALL_metamodel___abstractmetamodel___MMContext___add_global_class(recv) ((metamodel___abstractmetamodel___MMContext___add_global_class_t)CALL((recv), (SFT_metamodel___abstractmetamodel[3] + 6)))
#define CALL_metamodel___abstractmetamodel___MMContext___add_local_class(recv) ((metamodel___abstractmetamodel___MMContext___add_local_class_t)CALL((recv), (SFT_metamodel___abstractmetamodel[3] + 7)))
#define ID_metamodel___abstractmetamodel___MMDirectory (SFT_metamodel___abstractmetamodel[4])
#define COLOR_metamodel___abstractmetamodel___MMDirectory (SFT_metamodel___abstractmetamodel[5])
#define ATTR_metamodel___abstractmetamodel___MMDirectory____name(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[6] + 0))
#define ATTR_metamodel___abstractmetamodel___MMDirectory____path(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[6] + 1))
#define ATTR_metamodel___abstractmetamodel___MMDirectory____parent(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[6] + 2))
#define ATTR_metamodel___abstractmetamodel___MMDirectory____owner(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[6] + 3))
#define ATTR_metamodel___abstractmetamodel___MMDirectory____modules(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[6] + 4))
#define INIT_TABLE_POS_metamodel___abstractmetamodel___MMDirectory (SFT_metamodel___abstractmetamodel[7] + 0)
#define CALL_metamodel___abstractmetamodel___MMDirectory___name(recv) ((metamodel___abstractmetamodel___MMDirectory___name_t)CALL((recv), (SFT_metamodel___abstractmetamodel[7] + 1)))
#define CALL_metamodel___abstractmetamodel___MMDirectory___path(recv) ((metamodel___abstractmetamodel___MMDirectory___path_t)CALL((recv), (SFT_metamodel___abstractmetamodel[7] + 2)))
#define CALL_metamodel___abstractmetamodel___MMDirectory___parent(recv) ((metamodel___abstractmetamodel___MMDirectory___parent_t)CALL((recv), (SFT_metamodel___abstractmetamodel[7] + 3)))
#define CALL_metamodel___abstractmetamodel___MMDirectory___owner(recv) ((metamodel___abstractmetamodel___MMDirectory___owner_t)CALL((recv), (SFT_metamodel___abstractmetamodel[7] + 4)))
#define CALL_metamodel___abstractmetamodel___MMDirectory___owner__eq(recv) ((metamodel___abstractmetamodel___MMDirectory___owner__eq_t)CALL((recv), (SFT_metamodel___abstractmetamodel[7] + 5)))
#define CALL_metamodel___abstractmetamodel___MMDirectory___modules(recv) ((metamodel___abstractmetamodel___MMDirectory___modules_t)CALL((recv), (SFT_metamodel___abstractmetamodel[7] + 6)))
#define CALL_metamodel___abstractmetamodel___MMDirectory___add_module(recv) ((metamodel___abstractmetamodel___MMDirectory___add_module_t)CALL((recv), (SFT_metamodel___abstractmetamodel[7] + 7)))
#define CALL_metamodel___abstractmetamodel___MMDirectory___init(recv) ((metamodel___abstractmetamodel___MMDirectory___init_t)CALL((recv), (SFT_metamodel___abstractmetamodel[7] + 8)))
#define CALL_metamodel___abstractmetamodel___MMDirectory___full_name_for(recv) ((metamodel___abstractmetamodel___MMDirectory___full_name_for_t)CALL((recv), (SFT_metamodel___abstractmetamodel[7] + 9)))
#define ID_metamodel___abstractmetamodel___MMModule (SFT_metamodel___abstractmetamodel[8])
#define COLOR_metamodel___abstractmetamodel___MMModule (SFT_metamodel___abstractmetamodel[9])
#define ATTR_metamodel___abstractmetamodel___MMModule____context(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[10] + 0))
#define ATTR_metamodel___abstractmetamodel___MMModule____name(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[10] + 1))
#define ATTR_metamodel___abstractmetamodel___MMModule____full_name(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[10] + 2))
#define ATTR_metamodel___abstractmetamodel___MMModule____directory(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[10] + 3))
#define ATTR_metamodel___abstractmetamodel___MMModule____location(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[10] + 4))
#define ATTR_metamodel___abstractmetamodel___MMModule____mhe(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[10] + 5))
#define ATTR_metamodel___abstractmetamodel___MMModule____global_classes(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[10] + 6))
#define ATTR_metamodel___abstractmetamodel___MMModule____local_classes(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[10] + 7))
#define ATTR_metamodel___abstractmetamodel___MMModule____class_specialization_hierarchy(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[10] + 8))
#define ATTR_metamodel___abstractmetamodel___MMModule____intrude_modules(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[10] + 9))
#define ATTR_metamodel___abstractmetamodel___MMModule____public_modules(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[10] + 10))
#define ATTR_metamodel___abstractmetamodel___MMModule____private_modules(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[10] + 11))
#define ATTR_metamodel___abstractmetamodel___MMModule____explicit_imported_modules(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[10] + 12))
#define ATTR_metamodel___abstractmetamodel___MMModule____local_class_by_global(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[10] + 13))
#define ATTR_metamodel___abstractmetamodel___MMModule____global_class_by_name(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[10] + 14))
#define INIT_TABLE_POS_metamodel___abstractmetamodel___MMModule (SFT_metamodel___abstractmetamodel[11] + 0)
#define CALL_metamodel___abstractmetamodel___MMModule___context(recv) ((metamodel___abstractmetamodel___MMModule___context_t)CALL((recv), (SFT_metamodel___abstractmetamodel[11] + 1)))
#define CALL_metamodel___abstractmetamodel___MMModule___name(recv) ((metamodel___abstractmetamodel___MMModule___name_t)CALL((recv), (SFT_metamodel___abstractmetamodel[11] + 2)))
#define CALL_metamodel___abstractmetamodel___MMModule___full_name(recv) ((metamodel___abstractmetamodel___MMModule___full_name_t)CALL((recv), (SFT_metamodel___abstractmetamodel[11] + 3)))
#define CALL_metamodel___abstractmetamodel___MMModule___directory(recv) ((metamodel___abstractmetamodel___MMModule___directory_t)CALL((recv), (SFT_metamodel___abstractmetamodel[11] + 4)))
#define CALL_metamodel___abstractmetamodel___MMModule___location(recv) ((metamodel___abstractmetamodel___MMModule___location_t)CALL((recv), (SFT_metamodel___abstractmetamodel[11] + 5)))
#define CALL_metamodel___abstractmetamodel___MMModule___mhe(recv) ((metamodel___abstractmetamodel___MMModule___mhe_t)CALL((recv), (SFT_metamodel___abstractmetamodel[11] + 6)))
#define CALL_metamodel___abstractmetamodel___MMModule___global_classes(recv) ((metamodel___abstractmetamodel___MMModule___global_classes_t)CALL((recv), (SFT_metamodel___abstractmetamodel[11] + 7)))
#define CALL_metamodel___abstractmetamodel___MMModule___local_classes(recv) ((metamodel___abstractmetamodel___MMModule___local_classes_t)CALL((recv), (SFT_metamodel___abstractmetamodel[11] + 8)))
#define CALL_metamodel___abstractmetamodel___MMModule___class_specialization_hierarchy(recv) ((metamodel___abstractmetamodel___MMModule___class_specialization_hierarchy_t)CALL((recv), (SFT_metamodel___abstractmetamodel[11] + 9)))
#define CALL_metamodel___abstractmetamodel___MMModule___explicit_imported_modules(recv) ((metamodel___abstractmetamodel___MMModule___explicit_imported_modules_t)CALL((recv), (SFT_metamodel___abstractmetamodel[11] + 10)))
#define CALL_metamodel___abstractmetamodel___MMModule___init(recv) ((metamodel___abstractmetamodel___MMModule___init_t)CALL((recv), (SFT_metamodel___abstractmetamodel[11] + 11)))
#define CALL_metamodel___abstractmetamodel___MMModule___add_super_module(recv) ((metamodel___abstractmetamodel___MMModule___add_super_module_t)CALL((recv), (SFT_metamodel___abstractmetamodel[11] + 12)))
#define CALL_metamodel___abstractmetamodel___MMModule___visibility_for(recv) ((metamodel___abstractmetamodel___MMModule___visibility_for_t)CALL((recv), (SFT_metamodel___abstractmetamodel[11] + 13)))
#define CALL_metamodel___abstractmetamodel___MMModule_____bra(recv) ((metamodel___abstractmetamodel___MMModule_____bra_t)CALL((recv), (SFT_metamodel___abstractmetamodel[11] + 14)))
#define CALL_metamodel___abstractmetamodel___MMModule___class_by_name(recv) ((metamodel___abstractmetamodel___MMModule___class_by_name_t)CALL((recv), (SFT_metamodel___abstractmetamodel[11] + 15)))
#define CALL_metamodel___abstractmetamodel___MMModule___has_global_class_named(recv) ((metamodel___abstractmetamodel___MMModule___has_global_class_named_t)CALL((recv), (SFT_metamodel___abstractmetamodel[11] + 16)))
#define CALL_metamodel___abstractmetamodel___MMModule___global_class_named(recv) ((metamodel___abstractmetamodel___MMModule___global_class_named_t)CALL((recv), (SFT_metamodel___abstractmetamodel[11] + 17)))
#define CALL_metamodel___abstractmetamodel___MMModule___set_supers_class(recv) ((metamodel___abstractmetamodel___MMModule___set_supers_class_t)CALL((recv), (SFT_metamodel___abstractmetamodel[11] + 18)))
#define CALL_metamodel___abstractmetamodel___MMModule___register_global_class(recv) ((metamodel___abstractmetamodel___MMModule___register_global_class_t)CALL((recv), (SFT_metamodel___abstractmetamodel[11] + 19)))
#define ID_metamodel___abstractmetamodel___MMGlobalClass (SFT_metamodel___abstractmetamodel[12])
#define COLOR_metamodel___abstractmetamodel___MMGlobalClass (SFT_metamodel___abstractmetamodel[13])
#define ATTR_metamodel___abstractmetamodel___MMGlobalClass____intro(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[14] + 0))
#define ATTR_metamodel___abstractmetamodel___MMGlobalClass____class_refinement_hierarchy(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[14] + 1))
#define ATTR_metamodel___abstractmetamodel___MMGlobalClass____is_interface(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[14] + 2))
#define ATTR_metamodel___abstractmetamodel___MMGlobalClass____is_abstract(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[14] + 3))
#define ATTR_metamodel___abstractmetamodel___MMGlobalClass____is_enum(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[14] + 4))
#define ATTR_metamodel___abstractmetamodel___MMGlobalClass____visibility_level(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[14] + 5))
#define ATTR_metamodel___abstractmetamodel___MMGlobalClass____mixin_of(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[14] + 6))
#define INIT_TABLE_POS_metamodel___abstractmetamodel___MMGlobalClass (SFT_metamodel___abstractmetamodel[15] + 0)
#define CALL_metamodel___abstractmetamodel___MMGlobalClass___intro(recv) ((metamodel___abstractmetamodel___MMGlobalClass___intro_t)CALL((recv), (SFT_metamodel___abstractmetamodel[15] + 1)))
#define CALL_metamodel___abstractmetamodel___MMGlobalClass___class_refinement_hierarchy(recv) ((metamodel___abstractmetamodel___MMGlobalClass___class_refinement_hierarchy_t)CALL((recv), (SFT_metamodel___abstractmetamodel[15] + 2)))
#define CALL_metamodel___abstractmetamodel___MMGlobalClass___init(recv) ((metamodel___abstractmetamodel___MMGlobalClass___init_t)CALL((recv), (SFT_metamodel___abstractmetamodel[15] + 3)))
#define CALL_metamodel___abstractmetamodel___MMGlobalClass___name(recv) ((metamodel___abstractmetamodel___MMGlobalClass___name_t)CALL((recv), (SFT_metamodel___abstractmetamodel[15] + 4)))
#define CALL_metamodel___abstractmetamodel___MMGlobalClass___mmmodule(recv) ((metamodel___abstractmetamodel___MMGlobalClass___mmmodule_t)CALL((recv), (SFT_metamodel___abstractmetamodel[15] + 5)))
#define CALL_metamodel___abstractmetamodel___MMGlobalClass___register_local_class(recv) ((metamodel___abstractmetamodel___MMGlobalClass___register_local_class_t)CALL((recv), (SFT_metamodel___abstractmetamodel[15] + 6)))
#define CALL_metamodel___abstractmetamodel___MMGlobalClass___is_interface(recv) ((metamodel___abstractmetamodel___MMGlobalClass___is_interface_t)CALL((recv), (SFT_metamodel___abstractmetamodel[15] + 7)))
#define CALL_metamodel___abstractmetamodel___MMGlobalClass___is_interface__eq(recv) ((metamodel___abstractmetamodel___MMGlobalClass___is_interface__eq_t)CALL((recv), (SFT_metamodel___abstractmetamodel[15] + 8)))
#define CALL_metamodel___abstractmetamodel___MMGlobalClass___is_abstract(recv) ((metamodel___abstractmetamodel___MMGlobalClass___is_abstract_t)CALL((recv), (SFT_metamodel___abstractmetamodel[15] + 9)))
#define CALL_metamodel___abstractmetamodel___MMGlobalClass___is_abstract__eq(recv) ((metamodel___abstractmetamodel___MMGlobalClass___is_abstract__eq_t)CALL((recv), (SFT_metamodel___abstractmetamodel[15] + 10)))
#define CALL_metamodel___abstractmetamodel___MMGlobalClass___is_enum(recv) ((metamodel___abstractmetamodel___MMGlobalClass___is_enum_t)CALL((recv), (SFT_metamodel___abstractmetamodel[15] + 11)))
#define CALL_metamodel___abstractmetamodel___MMGlobalClass___is_enum__eq(recv) ((metamodel___abstractmetamodel___MMGlobalClass___is_enum__eq_t)CALL((recv), (SFT_metamodel___abstractmetamodel[15] + 12)))
#define CALL_metamodel___abstractmetamodel___MMGlobalClass___visibility_level(recv) ((metamodel___abstractmetamodel___MMGlobalClass___visibility_level_t)CALL((recv), (SFT_metamodel___abstractmetamodel[15] + 13)))
#define CALL_metamodel___abstractmetamodel___MMGlobalClass___visibility_level__eq(recv) ((metamodel___abstractmetamodel___MMGlobalClass___visibility_level__eq_t)CALL((recv), (SFT_metamodel___abstractmetamodel[15] + 14)))
#define CALL_metamodel___abstractmetamodel___MMGlobalClass___is_mixin(recv) ((metamodel___abstractmetamodel___MMGlobalClass___is_mixin_t)CALL((recv), (SFT_metamodel___abstractmetamodel[15] + 15)))
#define CALL_metamodel___abstractmetamodel___MMGlobalClass___mixin_of(recv) ((metamodel___abstractmetamodel___MMGlobalClass___mixin_of_t)CALL((recv), (SFT_metamodel___abstractmetamodel[15] + 16)))
#define CALL_metamodel___abstractmetamodel___MMGlobalClass___mixin_of__eq(recv) ((metamodel___abstractmetamodel___MMGlobalClass___mixin_of__eq_t)CALL((recv), (SFT_metamodel___abstractmetamodel[15] + 17)))
#define ID_metamodel___abstractmetamodel___MMLocalClass (SFT_metamodel___abstractmetamodel[16])
#define COLOR_metamodel___abstractmetamodel___MMLocalClass (SFT_metamodel___abstractmetamodel[17])
#define ATTR_metamodel___abstractmetamodel___MMLocalClass____name(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[18] + 0))
#define ATTR_metamodel___abstractmetamodel___MMLocalClass____arity(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[18] + 1))
#define ATTR_metamodel___abstractmetamodel___MMLocalClass____mmmodule(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[18] + 2))
#define ATTR_metamodel___abstractmetamodel___MMLocalClass____global(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[18] + 3))
#define ATTR_metamodel___abstractmetamodel___MMLocalClass____crhe(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[18] + 4))
#define ATTR_metamodel___abstractmetamodel___MMLocalClass____cshe(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[18] + 5))
#define ATTR_metamodel___abstractmetamodel___MMLocalClass____che(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[18] + 6))
#define ATTR_metamodel___abstractmetamodel___MMLocalClass____local_property_by_global(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[18] + 7))
#define ATTR_metamodel___abstractmetamodel___MMLocalClass____global_properties(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[18] + 8))
#define ATTR_metamodel___abstractmetamodel___MMLocalClass____local_local_properties(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[18] + 9))
#define ATTR_metamodel___abstractmetamodel___MMLocalClass____properties_by_name(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[18] + 10))
#define INIT_TABLE_POS_metamodel___abstractmetamodel___MMLocalClass (SFT_metamodel___abstractmetamodel[19] + 0)
#define CALL_metamodel___abstractmetamodel___MMLocalClass___name(recv) ((metamodel___abstractmetamodel___MMLocalClass___name_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 1)))
#define CALL_metamodel___abstractmetamodel___MMLocalClass___arity(recv) ((metamodel___abstractmetamodel___MMLocalClass___arity_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 2)))
#define CALL_metamodel___abstractmetamodel___MMLocalClass___mmmodule(recv) ((metamodel___abstractmetamodel___MMLocalClass___mmmodule_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 3)))
#define CALL_metamodel___abstractmetamodel___MMLocalClass___global(recv) ((metamodel___abstractmetamodel___MMLocalClass___global_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 4)))
#define CALL_metamodel___abstractmetamodel___MMLocalClass___crhe(recv) ((metamodel___abstractmetamodel___MMLocalClass___crhe_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 5)))
#define CALL_metamodel___abstractmetamodel___MMLocalClass___cshe(recv) ((metamodel___abstractmetamodel___MMLocalClass___cshe_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 6)))
#define CALL_metamodel___abstractmetamodel___MMLocalClass___che(recv) ((metamodel___abstractmetamodel___MMLocalClass___che_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 7)))
#define CALL_metamodel___abstractmetamodel___MMLocalClass___global_properties(recv) ((metamodel___abstractmetamodel___MMLocalClass___global_properties_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 8)))
#define CALL_metamodel___abstractmetamodel___MMLocalClass___local_local_properties(recv) ((metamodel___abstractmetamodel___MMLocalClass___local_local_properties_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 9)))
#define CALL_metamodel___abstractmetamodel___MMLocalClass___init(recv) ((metamodel___abstractmetamodel___MMLocalClass___init_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 10)))
#define CALL_metamodel___abstractmetamodel___MMLocalClass___for_module(recv) ((metamodel___abstractmetamodel___MMLocalClass___for_module_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 11)))
#define CALL_metamodel___abstractmetamodel___MMLocalClass___new_global(recv) ((metamodel___abstractmetamodel___MMLocalClass___new_global_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 12)))
#define CALL_metamodel___abstractmetamodel___MMLocalClass___set_global(recv) ((metamodel___abstractmetamodel___MMLocalClass___set_global_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 13)))
#define CALL_metamodel___abstractmetamodel___MMLocalClass___has_global_property_by_name(recv) ((metamodel___abstractmetamodel___MMLocalClass___has_global_property_by_name_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 14)))
#define CALL_metamodel___abstractmetamodel___MMLocalClass___get_property_by_name(recv) ((metamodel___abstractmetamodel___MMLocalClass___get_property_by_name_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 15)))
#define CALL_metamodel___abstractmetamodel___MMLocalClass___attribute(recv) ((metamodel___abstractmetamodel___MMLocalClass___attribute_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 16)))
#define CALL_metamodel___abstractmetamodel___MMLocalClass___method(recv) ((metamodel___abstractmetamodel___MMLocalClass___method_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 17)))
#define CALL_metamodel___abstractmetamodel___MMLocalClass___select_method(recv) ((metamodel___abstractmetamodel___MMLocalClass___select_method_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 18)))
#define CALL_metamodel___abstractmetamodel___MMLocalClass___select_attribute(recv) ((metamodel___abstractmetamodel___MMLocalClass___select_attribute_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 19)))
#define CALL_metamodel___abstractmetamodel___MMLocalClass___super_methods_named(recv) ((metamodel___abstractmetamodel___MMLocalClass___super_methods_named_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 20)))
#define CALL_metamodel___abstractmetamodel___MMLocalClass___register_local_property(recv) ((metamodel___abstractmetamodel___MMLocalClass___register_local_property_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 21)))
#define CALL_metamodel___abstractmetamodel___MMLocalClass___register_global_property(recv) ((metamodel___abstractmetamodel___MMLocalClass___register_global_property_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 22)))
#define CALL_metamodel___abstractmetamodel___MMLocalClass___has_global_property(recv) ((metamodel___abstractmetamodel___MMLocalClass___has_global_property_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 23)))
#define CALL_metamodel___abstractmetamodel___MMLocalClass_____bra(recv) ((metamodel___abstractmetamodel___MMLocalClass_____bra_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 24)))
#define CALL_metamodel___abstractmetamodel___MMLocalClass___context(recv) ((metamodel___abstractmetamodel___MMLocalClass___context_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 25)))
#define CALL_metamodel___abstractmetamodel___MMLocalClass___total_order_compare(recv) ((metamodel___abstractmetamodel___MMLocalClass___total_order_compare_t)CALL((recv), (SFT_metamodel___abstractmetamodel[19] + 26)))
#define ID_metamodel___abstractmetamodel___MMGlobalProperty (SFT_metamodel___abstractmetamodel[20])
#define COLOR_metamodel___abstractmetamodel___MMGlobalProperty (SFT_metamodel___abstractmetamodel[21])
#define ATTR_metamodel___abstractmetamodel___MMGlobalProperty____intro(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[22] + 0))
#define ATTR_metamodel___abstractmetamodel___MMGlobalProperty____property_hierarchy(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[22] + 1))
#define ATTR_metamodel___abstractmetamodel___MMGlobalProperty____is_init(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[22] + 2))
#define ATTR_metamodel___abstractmetamodel___MMGlobalProperty____visibility_level(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[22] + 3))
#define INIT_TABLE_POS_metamodel___abstractmetamodel___MMGlobalProperty (SFT_metamodel___abstractmetamodel[23] + 0)
#define CALL_metamodel___abstractmetamodel___MMGlobalProperty___intro(recv) ((metamodel___abstractmetamodel___MMGlobalProperty___intro_t)CALL((recv), (SFT_metamodel___abstractmetamodel[23] + 1)))
#define CALL_metamodel___abstractmetamodel___MMGlobalProperty___local_class(recv) ((metamodel___abstractmetamodel___MMGlobalProperty___local_class_t)CALL((recv), (SFT_metamodel___abstractmetamodel[23] + 2)))
#define CALL_metamodel___abstractmetamodel___MMGlobalProperty___property_hierarchy(recv) ((metamodel___abstractmetamodel___MMGlobalProperty___property_hierarchy_t)CALL((recv), (SFT_metamodel___abstractmetamodel[23] + 3)))
#define CALL_metamodel___abstractmetamodel___MMGlobalProperty___init(recv) ((metamodel___abstractmetamodel___MMGlobalProperty___init_t)CALL((recv), (SFT_metamodel___abstractmetamodel[23] + 4)))
#define CALL_metamodel___abstractmetamodel___MMGlobalProperty___add_local_property(recv) ((metamodel___abstractmetamodel___MMGlobalProperty___add_local_property_t)CALL((recv), (SFT_metamodel___abstractmetamodel[23] + 5)))
#define CALL_metamodel___abstractmetamodel___MMGlobalProperty___is_attribute(recv) ((metamodel___abstractmetamodel___MMGlobalProperty___is_attribute_t)CALL((recv), (SFT_metamodel___abstractmetamodel[23] + 6)))
#define CALL_metamodel___abstractmetamodel___MMGlobalProperty___is_method(recv) ((metamodel___abstractmetamodel___MMGlobalProperty___is_method_t)CALL((recv), (SFT_metamodel___abstractmetamodel[23] + 7)))
#define CALL_metamodel___abstractmetamodel___MMGlobalProperty___is_init(recv) ((metamodel___abstractmetamodel___MMGlobalProperty___is_init_t)CALL((recv), (SFT_metamodel___abstractmetamodel[23] + 8)))
#define CALL_metamodel___abstractmetamodel___MMGlobalProperty___is_init__eq(recv) ((metamodel___abstractmetamodel___MMGlobalProperty___is_init__eq_t)CALL((recv), (SFT_metamodel___abstractmetamodel[23] + 9)))
#define CALL_metamodel___abstractmetamodel___MMGlobalProperty___is_init_for(recv) ((metamodel___abstractmetamodel___MMGlobalProperty___is_init_for_t)CALL((recv), (SFT_metamodel___abstractmetamodel[23] + 10)))
#define CALL_metamodel___abstractmetamodel___MMGlobalProperty___visibility_level(recv) ((metamodel___abstractmetamodel___MMGlobalProperty___visibility_level_t)CALL((recv), (SFT_metamodel___abstractmetamodel[23] + 11)))
#define CALL_metamodel___abstractmetamodel___MMGlobalProperty___visibility_level__eq(recv) ((metamodel___abstractmetamodel___MMGlobalProperty___visibility_level__eq_t)CALL((recv), (SFT_metamodel___abstractmetamodel[23] + 12)))
#define ID_metamodel___abstractmetamodel___MMLocalProperty (SFT_metamodel___abstractmetamodel[24])
#define COLOR_metamodel___abstractmetamodel___MMLocalProperty (SFT_metamodel___abstractmetamodel[25])
#define ATTR_metamodel___abstractmetamodel___MMLocalProperty____name(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[26] + 0))
#define ATTR_metamodel___abstractmetamodel___MMLocalProperty____local_class(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[26] + 1))
#define ATTR_metamodel___abstractmetamodel___MMLocalProperty____global(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[26] + 2))
#define ATTR_metamodel___abstractmetamodel___MMLocalProperty____prhe(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[26] + 3))
#define ATTR_metamodel___abstractmetamodel___MMLocalProperty____need_super(recv) ATTR(recv, (SFT_metamodel___abstractmetamodel[26] + 4))
#define INIT_TABLE_POS_metamodel___abstractmetamodel___MMLocalProperty (SFT_metamodel___abstractmetamodel[27] + 0)
#define CALL_metamodel___abstractmetamodel___MMLocalProperty___name(recv) ((metamodel___abstractmetamodel___MMLocalProperty___name_t)CALL((recv), (SFT_metamodel___abstractmetamodel[27] + 1)))
#define CALL_metamodel___abstractmetamodel___MMLocalProperty___local_class(recv) ((metamodel___abstractmetamodel___MMLocalProperty___local_class_t)CALL((recv), (SFT_metamodel___abstractmetamodel[27] + 2)))
#define CALL_metamodel___abstractmetamodel___MMLocalProperty___global(recv) ((metamodel___abstractmetamodel___MMLocalProperty___global_t)CALL((recv), (SFT_metamodel___abstractmetamodel[27] + 3)))
#define CALL_metamodel___abstractmetamodel___MMLocalProperty___is_global_set(recv) ((metamodel___abstractmetamodel___MMLocalProperty___is_global_set_t)CALL((recv), (SFT_metamodel___abstractmetamodel[27] + 4)))
#define CALL_metamodel___abstractmetamodel___MMLocalProperty___prhe(recv) ((metamodel___abstractmetamodel___MMLocalProperty___prhe_t)CALL((recv), (SFT_metamodel___abstractmetamodel[27] + 5)))
#define CALL_metamodel___abstractmetamodel___MMLocalProperty___mmmodule(recv) ((metamodel___abstractmetamodel___MMLocalProperty___mmmodule_t)CALL((recv), (SFT_metamodel___abstractmetamodel[27] + 6)))
#define CALL_metamodel___abstractmetamodel___MMLocalProperty___full_name(recv) ((metamodel___abstractmetamodel___MMLocalProperty___full_name_t)CALL((recv), (SFT_metamodel___abstractmetamodel[27] + 7)))
#define CALL_metamodel___abstractmetamodel___MMLocalProperty___set_global(recv) ((metamodel___abstractmetamodel___MMLocalProperty___set_global_t)CALL((recv), (SFT_metamodel___abstractmetamodel[27] + 8)))
#define CALL_metamodel___abstractmetamodel___MMLocalProperty___new_global(recv) ((metamodel___abstractmetamodel___MMLocalProperty___new_global_t)CALL((recv), (SFT_metamodel___abstractmetamodel[27] + 9)))
#define CALL_metamodel___abstractmetamodel___MMLocalProperty___need_super(recv) ((metamodel___abstractmetamodel___MMLocalProperty___need_super_t)CALL((recv), (SFT_metamodel___abstractmetamodel[27] + 10)))
#define CALL_metamodel___abstractmetamodel___MMLocalProperty___need_super__eq(recv) ((metamodel___abstractmetamodel___MMLocalProperty___need_super__eq_t)CALL((recv), (SFT_metamodel___abstractmetamodel[27] + 11)))
#define CALL_metamodel___abstractmetamodel___MMLocalProperty___init(recv) ((metamodel___abstractmetamodel___MMLocalProperty___init_t)CALL((recv), (SFT_metamodel___abstractmetamodel[27] + 12)))
#define ID_metamodel___abstractmetamodel___MMAttribute (SFT_metamodel___abstractmetamodel[28])
#define COLOR_metamodel___abstractmetamodel___MMAttribute (SFT_metamodel___abstractmetamodel[29])
#define INIT_TABLE_POS_metamodel___abstractmetamodel___MMAttribute (SFT_metamodel___abstractmetamodel[30] + 0)
#define ID_metamodel___abstractmetamodel___MMMethod (SFT_metamodel___abstractmetamodel[31])
#define COLOR_metamodel___abstractmetamodel___MMMethod (SFT_metamodel___abstractmetamodel[32])
#define INIT_TABLE_POS_metamodel___abstractmetamodel___MMMethod (SFT_metamodel___abstractmetamodel[33] + 0)
#define CALL_metamodel___abstractmetamodel___MMMethod___is_intern(recv) ((metamodel___abstractmetamodel___MMMethod___is_intern_t)CALL((recv), (SFT_metamodel___abstractmetamodel[33] + 1)))
#define CALL_metamodel___abstractmetamodel___MMMethod___is_abstract(recv) ((metamodel___abstractmetamodel___MMMethod___is_abstract_t)CALL((recv), (SFT_metamodel___abstractmetamodel[33] + 2)))
#define CALL_metamodel___abstractmetamodel___MMMethod___extern_name(recv) ((metamodel___abstractmetamodel___MMMethod___extern_name_t)CALL((recv), (SFT_metamodel___abstractmetamodel[33] + 3)))
#define ID_metamodel___abstractmetamodel___MMConcreteClass (SFT_metamodel___abstractmetamodel[34])
#define COLOR_metamodel___abstractmetamodel___MMConcreteClass (SFT_metamodel___abstractmetamodel[35])
#define INIT_TABLE_POS_metamodel___abstractmetamodel___MMConcreteClass (SFT_metamodel___abstractmetamodel[36] + 0)
static const char * const LOCATE_metamodel___abstractmetamodel___MMContext___init = "abstractmetamodel::MMContext::init";
void metamodel___abstractmetamodel___MMContext___init(val_t p0, int* init_table);
typedef void (*metamodel___abstractmetamodel___MMContext___init_t)(val_t p0, int* init_table);
val_t NEW_MMContext_metamodel___abstractmetamodel___MMContext___init();
static const char * const LOCATE_metamodel___abstractmetamodel___MMContext___module_hierarchy = "abstractmetamodel::MMContext::module_hierarchy";
val_t metamodel___abstractmetamodel___MMContext___module_hierarchy(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMContext___module_hierarchy_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMContext___class_hierarchy = "abstractmetamodel::MMContext::class_hierarchy";
val_t metamodel___abstractmetamodel___MMContext___class_hierarchy(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMContext___class_hierarchy_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMContext___modules = "abstractmetamodel::MMContext::modules";
val_t metamodel___abstractmetamodel___MMContext___modules(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMContext___modules_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMContext___add_module = "abstractmetamodel::MMContext::add_module";
void metamodel___abstractmetamodel___MMContext___add_module(val_t p0, val_t p1, val_t p2);
typedef void (*metamodel___abstractmetamodel___MMContext___add_module_t)(val_t p0, val_t p1, val_t p2);
static const char * const LOCATE_metamodel___abstractmetamodel___MMContext___add_global_class = "abstractmetamodel::MMContext::add_global_class";
void metamodel___abstractmetamodel___MMContext___add_global_class(val_t p0, val_t p1);
typedef void (*metamodel___abstractmetamodel___MMContext___add_global_class_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMContext___add_local_class = "abstractmetamodel::MMContext::add_local_class";
void metamodel___abstractmetamodel___MMContext___add_local_class(val_t p0, val_t p1, val_t p2);
typedef void (*metamodel___abstractmetamodel___MMContext___add_local_class_t)(val_t p0, val_t p1, val_t p2);
static const char * const LOCATE_metamodel___abstractmetamodel___MMDirectory___name = "abstractmetamodel::MMDirectory::name";
val_t metamodel___abstractmetamodel___MMDirectory___name(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMDirectory___name_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMDirectory___path = "abstractmetamodel::MMDirectory::path";
val_t metamodel___abstractmetamodel___MMDirectory___path(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMDirectory___path_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMDirectory___parent = "abstractmetamodel::MMDirectory::parent";
val_t metamodel___abstractmetamodel___MMDirectory___parent(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMDirectory___parent_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMDirectory___owner = "abstractmetamodel::MMDirectory::owner";
val_t metamodel___abstractmetamodel___MMDirectory___owner(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMDirectory___owner_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMDirectory___owner__eq = "abstractmetamodel::MMDirectory::owner=";
void metamodel___abstractmetamodel___MMDirectory___owner__eq(val_t p0, val_t p1);
typedef void (*metamodel___abstractmetamodel___MMDirectory___owner__eq_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMDirectory___modules = "abstractmetamodel::MMDirectory::modules";
val_t metamodel___abstractmetamodel___MMDirectory___modules(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMDirectory___modules_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMDirectory___add_module = "abstractmetamodel::MMDirectory::add_module";
void metamodel___abstractmetamodel___MMDirectory___add_module(val_t p0, val_t p1);
typedef void (*metamodel___abstractmetamodel___MMDirectory___add_module_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMDirectory___init = "abstractmetamodel::MMDirectory::init";
void metamodel___abstractmetamodel___MMDirectory___init(val_t p0, val_t p1, val_t p2, val_t p3, int* init_table);
typedef void (*metamodel___abstractmetamodel___MMDirectory___init_t)(val_t p0, val_t p1, val_t p2, val_t p3, int* init_table);
val_t NEW_MMDirectory_metamodel___abstractmetamodel___MMDirectory___init(val_t p0, val_t p1, val_t p2);
static const char * const LOCATE_metamodel___abstractmetamodel___MMDirectory___full_name_for = "abstractmetamodel::MMDirectory::full_name_for";
val_t metamodel___abstractmetamodel___MMDirectory___full_name_for(val_t p0, val_t p1);
typedef val_t (*metamodel___abstractmetamodel___MMDirectory___full_name_for_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMModule___context = "abstractmetamodel::MMModule::context";
val_t metamodel___abstractmetamodel___MMModule___context(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMModule___context_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMModule___name = "abstractmetamodel::MMModule::name";
val_t metamodel___abstractmetamodel___MMModule___name(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMModule___name_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMModule___full_name = "abstractmetamodel::MMModule::full_name";
val_t metamodel___abstractmetamodel___MMModule___full_name(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMModule___full_name_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMModule___directory = "abstractmetamodel::MMModule::directory";
val_t metamodel___abstractmetamodel___MMModule___directory(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMModule___directory_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMModule___location = "abstractmetamodel::MMModule::location";
val_t metamodel___abstractmetamodel___MMModule___location(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMModule___location_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMModule___mhe = "abstractmetamodel::MMModule::mhe";
val_t metamodel___abstractmetamodel___MMModule___mhe(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMModule___mhe_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMModule___global_classes = "abstractmetamodel::MMModule::global_classes";
val_t metamodel___abstractmetamodel___MMModule___global_classes(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMModule___global_classes_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMModule___local_classes = "abstractmetamodel::MMModule::local_classes";
val_t metamodel___abstractmetamodel___MMModule___local_classes(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMModule___local_classes_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMModule___class_specialization_hierarchy = "abstractmetamodel::MMModule::class_specialization_hierarchy";
val_t metamodel___abstractmetamodel___MMModule___class_specialization_hierarchy(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMModule___class_specialization_hierarchy_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMModule___explicit_imported_modules = "abstractmetamodel::MMModule::explicit_imported_modules";
val_t metamodel___abstractmetamodel___MMModule___explicit_imported_modules(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMModule___explicit_imported_modules_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMModule___init = "abstractmetamodel::MMModule::init";
void metamodel___abstractmetamodel___MMModule___init(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4, int* init_table);
typedef void (*metamodel___abstractmetamodel___MMModule___init_t)(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4, int* init_table);
val_t NEW_MMModule_metamodel___abstractmetamodel___MMModule___init(val_t p0, val_t p1, val_t p2, val_t p3);
static const char * const LOCATE_metamodel___abstractmetamodel___MMModule___add_super_module = "abstractmetamodel::MMModule::add_super_module";
void metamodel___abstractmetamodel___MMModule___add_super_module(val_t p0, val_t p1, val_t p2);
typedef void (*metamodel___abstractmetamodel___MMModule___add_super_module_t)(val_t p0, val_t p1, val_t p2);
static const char * const LOCATE_metamodel___abstractmetamodel___MMModule___visibility_for = "abstractmetamodel::MMModule::visibility_for";
val_t metamodel___abstractmetamodel___MMModule___visibility_for(val_t p0, val_t p1);
typedef val_t (*metamodel___abstractmetamodel___MMModule___visibility_for_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMModule_____bra = "abstractmetamodel::MMModule::[]";
val_t metamodel___abstractmetamodel___MMModule_____bra(val_t p0, val_t p1);
typedef val_t (*metamodel___abstractmetamodel___MMModule_____bra_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMModule___class_by_name = "abstractmetamodel::MMModule::class_by_name";
val_t metamodel___abstractmetamodel___MMModule___class_by_name(val_t p0, val_t p1);
typedef val_t (*metamodel___abstractmetamodel___MMModule___class_by_name_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMModule___has_global_class_named = "abstractmetamodel::MMModule::has_global_class_named";
val_t metamodel___abstractmetamodel___MMModule___has_global_class_named(val_t p0, val_t p1);
typedef val_t (*metamodel___abstractmetamodel___MMModule___has_global_class_named_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMModule___global_class_named = "abstractmetamodel::MMModule::global_class_named";
val_t metamodel___abstractmetamodel___MMModule___global_class_named(val_t p0, val_t p1);
typedef val_t (*metamodel___abstractmetamodel___MMModule___global_class_named_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMModule___to_s = "abstractmetamodel::MMModule::(string::Object::to_s)";
val_t metamodel___abstractmetamodel___MMModule___to_s(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMModule___to_s_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMModule___set_supers_class = "abstractmetamodel::MMModule::set_supers_class";
void metamodel___abstractmetamodel___MMModule___set_supers_class(val_t p0, val_t p1, val_t p2);
typedef void (*metamodel___abstractmetamodel___MMModule___set_supers_class_t)(val_t p0, val_t p1, val_t p2);
static const char * const LOCATE_metamodel___abstractmetamodel___MMModule___register_global_class = "abstractmetamodel::MMModule::register_global_class";
void metamodel___abstractmetamodel___MMModule___register_global_class(val_t p0, val_t p1);
typedef void (*metamodel___abstractmetamodel___MMModule___register_global_class_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalClass___intro = "abstractmetamodel::MMGlobalClass::intro";
val_t metamodel___abstractmetamodel___MMGlobalClass___intro(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMGlobalClass___intro_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalClass___class_refinement_hierarchy = "abstractmetamodel::MMGlobalClass::class_refinement_hierarchy";
val_t metamodel___abstractmetamodel___MMGlobalClass___class_refinement_hierarchy(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMGlobalClass___class_refinement_hierarchy_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalClass___init = "abstractmetamodel::MMGlobalClass::init";
void metamodel___abstractmetamodel___MMGlobalClass___init(val_t p0, val_t p1, int* init_table);
typedef void (*metamodel___abstractmetamodel___MMGlobalClass___init_t)(val_t p0, val_t p1, int* init_table);
val_t NEW_MMGlobalClass_metamodel___abstractmetamodel___MMGlobalClass___init(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalClass___name = "abstractmetamodel::MMGlobalClass::name";
val_t metamodel___abstractmetamodel___MMGlobalClass___name(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMGlobalClass___name_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalClass___mmmodule = "abstractmetamodel::MMGlobalClass::mmmodule";
val_t metamodel___abstractmetamodel___MMGlobalClass___mmmodule(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMGlobalClass___mmmodule_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalClass___to_s = "abstractmetamodel::MMGlobalClass::(string::Object::to_s)";
val_t metamodel___abstractmetamodel___MMGlobalClass___to_s(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMGlobalClass___to_s_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalClass___register_local_class = "abstractmetamodel::MMGlobalClass::register_local_class";
void metamodel___abstractmetamodel___MMGlobalClass___register_local_class(val_t p0, val_t p1);
typedef void (*metamodel___abstractmetamodel___MMGlobalClass___register_local_class_t)(val_t p0, val_t p1);
  typedef void (*CLOS_OC_metamodel___abstractmetamodel___MMGlobalClass___register_local_class_1_0)(struct stack_frame_t *);
  void OC_metamodel___abstractmetamodel___MMGlobalClass___register_local_class_1(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
  typedef void (*OC_metamodel___abstractmetamodel___MMGlobalClass___register_local_class_1_t)(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalClass___is_interface = "abstractmetamodel::MMGlobalClass::is_interface";
val_t metamodel___abstractmetamodel___MMGlobalClass___is_interface(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMGlobalClass___is_interface_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalClass___is_interface__eq = "abstractmetamodel::MMGlobalClass::is_interface=";
void metamodel___abstractmetamodel___MMGlobalClass___is_interface__eq(val_t p0, val_t p1);
typedef void (*metamodel___abstractmetamodel___MMGlobalClass___is_interface__eq_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalClass___is_abstract = "abstractmetamodel::MMGlobalClass::is_abstract";
val_t metamodel___abstractmetamodel___MMGlobalClass___is_abstract(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMGlobalClass___is_abstract_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalClass___is_abstract__eq = "abstractmetamodel::MMGlobalClass::is_abstract=";
void metamodel___abstractmetamodel___MMGlobalClass___is_abstract__eq(val_t p0, val_t p1);
typedef void (*metamodel___abstractmetamodel___MMGlobalClass___is_abstract__eq_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalClass___is_enum = "abstractmetamodel::MMGlobalClass::is_enum";
val_t metamodel___abstractmetamodel___MMGlobalClass___is_enum(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMGlobalClass___is_enum_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalClass___is_enum__eq = "abstractmetamodel::MMGlobalClass::is_enum=";
void metamodel___abstractmetamodel___MMGlobalClass___is_enum__eq(val_t p0, val_t p1);
typedef void (*metamodel___abstractmetamodel___MMGlobalClass___is_enum__eq_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalClass___visibility_level = "abstractmetamodel::MMGlobalClass::visibility_level";
val_t metamodel___abstractmetamodel___MMGlobalClass___visibility_level(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMGlobalClass___visibility_level_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalClass___visibility_level__eq = "abstractmetamodel::MMGlobalClass::visibility_level=";
void metamodel___abstractmetamodel___MMGlobalClass___visibility_level__eq(val_t p0, val_t p1);
typedef void (*metamodel___abstractmetamodel___MMGlobalClass___visibility_level__eq_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalClass___is_mixin = "abstractmetamodel::MMGlobalClass::is_mixin";
val_t metamodel___abstractmetamodel___MMGlobalClass___is_mixin(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMGlobalClass___is_mixin_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalClass___mixin_of = "abstractmetamodel::MMGlobalClass::mixin_of";
val_t metamodel___abstractmetamodel___MMGlobalClass___mixin_of(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMGlobalClass___mixin_of_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalClass___mixin_of__eq = "abstractmetamodel::MMGlobalClass::mixin_of=";
void metamodel___abstractmetamodel___MMGlobalClass___mixin_of__eq(val_t p0, val_t p1);
typedef void (*metamodel___abstractmetamodel___MMGlobalClass___mixin_of__eq_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___name = "abstractmetamodel::MMLocalClass::name";
val_t metamodel___abstractmetamodel___MMLocalClass___name(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMLocalClass___name_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___arity = "abstractmetamodel::MMLocalClass::arity";
val_t metamodel___abstractmetamodel___MMLocalClass___arity(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMLocalClass___arity_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___mmmodule = "abstractmetamodel::MMLocalClass::mmmodule";
val_t metamodel___abstractmetamodel___MMLocalClass___mmmodule(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMLocalClass___mmmodule_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___global = "abstractmetamodel::MMLocalClass::global";
val_t metamodel___abstractmetamodel___MMLocalClass___global(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMLocalClass___global_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___crhe = "abstractmetamodel::MMLocalClass::crhe";
val_t metamodel___abstractmetamodel___MMLocalClass___crhe(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMLocalClass___crhe_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___cshe = "abstractmetamodel::MMLocalClass::cshe";
val_t metamodel___abstractmetamodel___MMLocalClass___cshe(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMLocalClass___cshe_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___che = "abstractmetamodel::MMLocalClass::che";
val_t metamodel___abstractmetamodel___MMLocalClass___che(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMLocalClass___che_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___global_properties = "abstractmetamodel::MMLocalClass::global_properties";
val_t metamodel___abstractmetamodel___MMLocalClass___global_properties(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMLocalClass___global_properties_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___local_local_properties = "abstractmetamodel::MMLocalClass::local_local_properties";
val_t metamodel___abstractmetamodel___MMLocalClass___local_local_properties(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMLocalClass___local_local_properties_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___init = "abstractmetamodel::MMLocalClass::init";
void metamodel___abstractmetamodel___MMLocalClass___init(val_t p0, val_t p1, val_t p2, val_t p3, int* init_table);
typedef void (*metamodel___abstractmetamodel___MMLocalClass___init_t)(val_t p0, val_t p1, val_t p2, val_t p3, int* init_table);
val_t NEW_MMLocalClass_metamodel___abstractmetamodel___MMLocalClass___init(val_t p0, val_t p1, val_t p2);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___for_module = "abstractmetamodel::MMLocalClass::for_module";
val_t metamodel___abstractmetamodel___MMLocalClass___for_module(val_t p0, val_t p1);
typedef val_t (*metamodel___abstractmetamodel___MMLocalClass___for_module_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___new_global = "abstractmetamodel::MMLocalClass::new_global";
void metamodel___abstractmetamodel___MMLocalClass___new_global(val_t p0);
typedef void (*metamodel___abstractmetamodel___MMLocalClass___new_global_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___set_global = "abstractmetamodel::MMLocalClass::set_global";
void metamodel___abstractmetamodel___MMLocalClass___set_global(val_t p0, val_t p1);
typedef void (*metamodel___abstractmetamodel___MMLocalClass___set_global_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___has_global_property_by_name = "abstractmetamodel::MMLocalClass::has_global_property_by_name";
val_t metamodel___abstractmetamodel___MMLocalClass___has_global_property_by_name(val_t p0, val_t p1);
typedef val_t (*metamodel___abstractmetamodel___MMLocalClass___has_global_property_by_name_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___get_property_by_name = "abstractmetamodel::MMLocalClass::get_property_by_name";
val_t metamodel___abstractmetamodel___MMLocalClass___get_property_by_name(val_t p0, val_t p1);
typedef val_t (*metamodel___abstractmetamodel___MMLocalClass___get_property_by_name_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___attribute = "abstractmetamodel::MMLocalClass::attribute";
val_t metamodel___abstractmetamodel___MMLocalClass___attribute(val_t p0, val_t p1);
typedef val_t (*metamodel___abstractmetamodel___MMLocalClass___attribute_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___method = "abstractmetamodel::MMLocalClass::method";
val_t metamodel___abstractmetamodel___MMLocalClass___method(val_t p0, val_t p1);
typedef val_t (*metamodel___abstractmetamodel___MMLocalClass___method_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___select_method = "abstractmetamodel::MMLocalClass::select_method";
val_t metamodel___abstractmetamodel___MMLocalClass___select_method(val_t p0, val_t p1);
typedef val_t (*metamodel___abstractmetamodel___MMLocalClass___select_method_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___select_attribute = "abstractmetamodel::MMLocalClass::select_attribute";
val_t metamodel___abstractmetamodel___MMLocalClass___select_attribute(val_t p0, val_t p1);
typedef val_t (*metamodel___abstractmetamodel___MMLocalClass___select_attribute_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___super_methods_named = "abstractmetamodel::MMLocalClass::super_methods_named";
val_t metamodel___abstractmetamodel___MMLocalClass___super_methods_named(val_t p0, val_t p1);
typedef val_t (*metamodel___abstractmetamodel___MMLocalClass___super_methods_named_t)(val_t p0, val_t p1);
  typedef void (*CLOS_OC_metamodel___abstractmetamodel___MMLocalClass___super_methods_named_1_0)(struct stack_frame_t *);
  void OC_metamodel___abstractmetamodel___MMLocalClass___super_methods_named_1(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
  typedef void (*OC_metamodel___abstractmetamodel___MMLocalClass___super_methods_named_1_t)(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___register_local_property = "abstractmetamodel::MMLocalClass::register_local_property";
void metamodel___abstractmetamodel___MMLocalClass___register_local_property(val_t p0, val_t p1);
typedef void (*metamodel___abstractmetamodel___MMLocalClass___register_local_property_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___register_global_property = "abstractmetamodel::MMLocalClass::register_global_property";
void metamodel___abstractmetamodel___MMLocalClass___register_global_property(val_t p0, val_t p1);
typedef void (*metamodel___abstractmetamodel___MMLocalClass___register_global_property_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___has_global_property = "abstractmetamodel::MMLocalClass::has_global_property";
val_t metamodel___abstractmetamodel___MMLocalClass___has_global_property(val_t p0, val_t p1);
typedef val_t (*metamodel___abstractmetamodel___MMLocalClass___has_global_property_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass_____bra = "abstractmetamodel::MMLocalClass::[]";
val_t metamodel___abstractmetamodel___MMLocalClass_____bra(val_t p0, val_t p1);
typedef val_t (*metamodel___abstractmetamodel___MMLocalClass_____bra_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___context = "abstractmetamodel::MMLocalClass::context";
val_t metamodel___abstractmetamodel___MMLocalClass___context(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMLocalClass___context_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___to_s = "abstractmetamodel::MMLocalClass::(string::Object::to_s)";
val_t metamodel___abstractmetamodel___MMLocalClass___to_s(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMLocalClass___to_s_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalClass___total_order_compare = "abstractmetamodel::MMLocalClass::total_order_compare";
val_t metamodel___abstractmetamodel___MMLocalClass___total_order_compare(val_t p0, val_t p1);
typedef val_t (*metamodel___abstractmetamodel___MMLocalClass___total_order_compare_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalProperty___intro = "abstractmetamodel::MMGlobalProperty::intro";
val_t metamodel___abstractmetamodel___MMGlobalProperty___intro(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMGlobalProperty___intro_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalProperty___local_class = "abstractmetamodel::MMGlobalProperty::local_class";
val_t metamodel___abstractmetamodel___MMGlobalProperty___local_class(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMGlobalProperty___local_class_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalProperty___property_hierarchy = "abstractmetamodel::MMGlobalProperty::property_hierarchy";
val_t metamodel___abstractmetamodel___MMGlobalProperty___property_hierarchy(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMGlobalProperty___property_hierarchy_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalProperty___init = "abstractmetamodel::MMGlobalProperty::init";
void metamodel___abstractmetamodel___MMGlobalProperty___init(val_t p0, val_t p1, int* init_table);
typedef void (*metamodel___abstractmetamodel___MMGlobalProperty___init_t)(val_t p0, val_t p1, int* init_table);
val_t NEW_MMGlobalProperty_metamodel___abstractmetamodel___MMGlobalProperty___init(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalProperty___to_s = "abstractmetamodel::MMGlobalProperty::(string::Object::to_s)";
val_t metamodel___abstractmetamodel___MMGlobalProperty___to_s(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMGlobalProperty___to_s_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalProperty___add_local_property = "abstractmetamodel::MMGlobalProperty::add_local_property";
void metamodel___abstractmetamodel___MMGlobalProperty___add_local_property(val_t p0, val_t p1, val_t p2);
typedef void (*metamodel___abstractmetamodel___MMGlobalProperty___add_local_property_t)(val_t p0, val_t p1, val_t p2);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalProperty___is_attribute = "abstractmetamodel::MMGlobalProperty::is_attribute";
val_t metamodel___abstractmetamodel___MMGlobalProperty___is_attribute(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMGlobalProperty___is_attribute_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalProperty___is_method = "abstractmetamodel::MMGlobalProperty::is_method";
val_t metamodel___abstractmetamodel___MMGlobalProperty___is_method(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMGlobalProperty___is_method_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalProperty___is_init = "abstractmetamodel::MMGlobalProperty::is_init";
val_t metamodel___abstractmetamodel___MMGlobalProperty___is_init(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMGlobalProperty___is_init_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalProperty___is_init__eq = "abstractmetamodel::MMGlobalProperty::is_init=";
void metamodel___abstractmetamodel___MMGlobalProperty___is_init__eq(val_t p0, val_t p1);
typedef void (*metamodel___abstractmetamodel___MMGlobalProperty___is_init__eq_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalProperty___is_init_for = "abstractmetamodel::MMGlobalProperty::is_init_for";
val_t metamodel___abstractmetamodel___MMGlobalProperty___is_init_for(val_t p0, val_t p1);
typedef val_t (*metamodel___abstractmetamodel___MMGlobalProperty___is_init_for_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalProperty___visibility_level = "abstractmetamodel::MMGlobalProperty::visibility_level";
val_t metamodel___abstractmetamodel___MMGlobalProperty___visibility_level(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMGlobalProperty___visibility_level_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMGlobalProperty___visibility_level__eq = "abstractmetamodel::MMGlobalProperty::visibility_level=";
void metamodel___abstractmetamodel___MMGlobalProperty___visibility_level__eq(val_t p0, val_t p1);
typedef void (*metamodel___abstractmetamodel___MMGlobalProperty___visibility_level__eq_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalProperty___name = "abstractmetamodel::MMLocalProperty::name";
val_t metamodel___abstractmetamodel___MMLocalProperty___name(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMLocalProperty___name_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalProperty___local_class = "abstractmetamodel::MMLocalProperty::local_class";
val_t metamodel___abstractmetamodel___MMLocalProperty___local_class(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMLocalProperty___local_class_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalProperty___global = "abstractmetamodel::MMLocalProperty::global";
val_t metamodel___abstractmetamodel___MMLocalProperty___global(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMLocalProperty___global_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalProperty___is_global_set = "abstractmetamodel::MMLocalProperty::is_global_set";
val_t metamodel___abstractmetamodel___MMLocalProperty___is_global_set(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMLocalProperty___is_global_set_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalProperty___prhe = "abstractmetamodel::MMLocalProperty::prhe";
val_t metamodel___abstractmetamodel___MMLocalProperty___prhe(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMLocalProperty___prhe_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalProperty___mmmodule = "abstractmetamodel::MMLocalProperty::mmmodule";
val_t metamodel___abstractmetamodel___MMLocalProperty___mmmodule(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMLocalProperty___mmmodule_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalProperty___full_name = "abstractmetamodel::MMLocalProperty::full_name";
val_t metamodel___abstractmetamodel___MMLocalProperty___full_name(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMLocalProperty___full_name_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalProperty___set_global = "abstractmetamodel::MMLocalProperty::set_global";
void metamodel___abstractmetamodel___MMLocalProperty___set_global(val_t p0, val_t p1);
typedef void (*metamodel___abstractmetamodel___MMLocalProperty___set_global_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalProperty___new_global = "abstractmetamodel::MMLocalProperty::new_global";
void metamodel___abstractmetamodel___MMLocalProperty___new_global(val_t p0);
typedef void (*metamodel___abstractmetamodel___MMLocalProperty___new_global_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalProperty___to_s = "abstractmetamodel::MMLocalProperty::(string::Object::to_s)";
val_t metamodel___abstractmetamodel___MMLocalProperty___to_s(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMLocalProperty___to_s_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalProperty___need_super = "abstractmetamodel::MMLocalProperty::need_super";
val_t metamodel___abstractmetamodel___MMLocalProperty___need_super(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMLocalProperty___need_super_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalProperty___need_super__eq = "abstractmetamodel::MMLocalProperty::need_super=";
void metamodel___abstractmetamodel___MMLocalProperty___need_super__eq(val_t p0, val_t p1);
typedef void (*metamodel___abstractmetamodel___MMLocalProperty___need_super__eq_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMLocalProperty___init = "abstractmetamodel::MMLocalProperty::init";
void metamodel___abstractmetamodel___MMLocalProperty___init(val_t p0, val_t p1, val_t p2, int* init_table);
typedef void (*metamodel___abstractmetamodel___MMLocalProperty___init_t)(val_t p0, val_t p1, val_t p2, int* init_table);
val_t NEW_MMLocalProperty_metamodel___abstractmetamodel___MMLocalProperty___init(val_t p0, val_t p1);
val_t NEW_MMAttribute_metamodel___abstractmetamodel___MMLocalProperty___init(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___abstractmetamodel___MMMethod___is_intern = "abstractmetamodel::MMMethod::is_intern";
val_t metamodel___abstractmetamodel___MMMethod___is_intern(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMMethod___is_intern_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMMethod___is_abstract = "abstractmetamodel::MMMethod::is_abstract";
val_t metamodel___abstractmetamodel___MMMethod___is_abstract(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMMethod___is_abstract_t)(val_t p0);
static const char * const LOCATE_metamodel___abstractmetamodel___MMMethod___extern_name = "abstractmetamodel::MMMethod::extern_name";
val_t metamodel___abstractmetamodel___MMMethod___extern_name(val_t p0);
typedef val_t (*metamodel___abstractmetamodel___MMMethod___extern_name_t)(val_t p0);
val_t NEW_MMMethod_metamodel___abstractmetamodel___MMLocalProperty___init(val_t p0, val_t p1);
val_t NEW_MMConcreteClass_metamodel___abstractmetamodel___MMLocalClass___init(val_t p0, val_t p1, val_t p2);
#endif
