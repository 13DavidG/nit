/* This C header file is generated by NIT to compile modules and programs that requires ni_tools. */
#ifndef ni_tools_sep
#define ni_tools_sep
#include "compiling._sep.h"
#include <nit_common.h>

extern const classtable_elt_t VFT_FunctionCompiler[];
extern const char *LOCATE_ni_tools;
extern const int SFT_ni_tools[];
#define ID_FunctionCompiler (SFT_ni_tools[0])
#define COLOR_FunctionCompiler (SFT_ni_tools[1])
#define ATTR_ni_tools___FunctionCompiler_____atsignature(recv) ATTR(recv, (SFT_ni_tools[2] + 0))
#define ATTR_ni_tools___FunctionCompiler_____atdecls(recv) ATTR(recv, (SFT_ni_tools[2] + 1))
#define ATTR_ni_tools___FunctionCompiler_____atexprs(recv) ATTR(recv, (SFT_ni_tools[2] + 2))
#define INIT_TABLE_POS_FunctionCompiler (SFT_ni_tools[3] + 0)
#define CALL_ni_tools___FunctionCompiler___signature(recv) ((ni_tools___FunctionCompiler___signature_t)CALL((recv), (SFT_ni_tools[3] + 1)))
#define CALL_ni_tools___FunctionCompiler___signature__eq(recv) ((ni_tools___FunctionCompiler___signature__eq_t)CALL((recv), (SFT_ni_tools[3] + 2)))
#define CALL_ni_tools___FunctionCompiler___decls(recv) ((ni_tools___FunctionCompiler___decls_t)CALL((recv), (SFT_ni_tools[3] + 3)))
#define CALL_ni_tools___FunctionCompiler___decls__eq(recv) ((ni_tools___FunctionCompiler___decls__eq_t)CALL((recv), (SFT_ni_tools[3] + 4)))
#define CALL_ni_tools___FunctionCompiler___exprs(recv) ((ni_tools___FunctionCompiler___exprs_t)CALL((recv), (SFT_ni_tools[3] + 5)))
#define CALL_ni_tools___FunctionCompiler___exprs__eq(recv) ((ni_tools___FunctionCompiler___exprs__eq_t)CALL((recv), (SFT_ni_tools[3] + 6)))
#define CALL_ni_tools___FunctionCompiler___to_writer(recv) ((ni_tools___FunctionCompiler___to_writer_t)CALL((recv), (SFT_ni_tools[3] + 7)))
#define CALL_ni_tools___FunctionCompiler___init(recv) ((ni_tools___FunctionCompiler___init_t)CALL((recv), (SFT_ni_tools[3] + 8)))
static const char * const LOCATE_ni_tools___FunctionCompiler___signature = "ni_tools::FunctionCompiler::signature";
val_t ni_tools___FunctionCompiler___signature(val_t p0);
typedef val_t (*ni_tools___FunctionCompiler___signature_t)(val_t p0);
static const char * const LOCATE_ni_tools___FunctionCompiler___signature__eq = "ni_tools::FunctionCompiler::signature=";
void ni_tools___FunctionCompiler___signature__eq(val_t p0, val_t p1);
typedef void (*ni_tools___FunctionCompiler___signature__eq_t)(val_t p0, val_t p1);
static const char * const LOCATE_ni_tools___FunctionCompiler___decls = "ni_tools::FunctionCompiler::decls";
val_t ni_tools___FunctionCompiler___decls(val_t p0);
typedef val_t (*ni_tools___FunctionCompiler___decls_t)(val_t p0);
static const char * const LOCATE_ni_tools___FunctionCompiler___decls__eq = "ni_tools::FunctionCompiler::decls=";
void ni_tools___FunctionCompiler___decls__eq(val_t p0, val_t p1);
typedef void (*ni_tools___FunctionCompiler___decls__eq_t)(val_t p0, val_t p1);
static const char * const LOCATE_ni_tools___FunctionCompiler___exprs = "ni_tools::FunctionCompiler::exprs";
val_t ni_tools___FunctionCompiler___exprs(val_t p0);
typedef val_t (*ni_tools___FunctionCompiler___exprs_t)(val_t p0);
static const char * const LOCATE_ni_tools___FunctionCompiler___exprs__eq = "ni_tools::FunctionCompiler::exprs=";
void ni_tools___FunctionCompiler___exprs__eq(val_t p0, val_t p1);
typedef void (*ni_tools___FunctionCompiler___exprs__eq_t)(val_t p0, val_t p1);
static const char * const LOCATE_ni_tools___FunctionCompiler___to_writer = "ni_tools::FunctionCompiler::to_writer";
val_t ni_tools___FunctionCompiler___to_writer(val_t p0);
typedef val_t (*ni_tools___FunctionCompiler___to_writer_t)(val_t p0);
static const char * const LOCATE_ni_tools___FunctionCompiler___init = "ni_tools::FunctionCompiler::init";
void ni_tools___FunctionCompiler___init(val_t p0, val_t p1, int* init_table);
typedef void (*ni_tools___FunctionCompiler___init_t)(val_t p0, val_t p1, int* init_table);
val_t NEW_FunctionCompiler_ni_tools___FunctionCompiler___init(val_t p0);
#endif
