/* This C header file is generated by NIT to compile modules and programs that requires src/metamodel/type_formal. */
#ifndef metamodel___type_formal_sep
#define metamodel___type_formal_sep
#include "metamodel___inheritance._sep.h"
#include <nit_common.h>

extern const classtable_elt_t VFT_metamodel___type_formal___MMTypeFormal[];
extern const char *LOCATE_metamodel___type_formal;
extern const int SFT_metamodel___type_formal[];
#define CALL_metamodel___type_formal___MMType___direct_type(recv) ((metamodel___type_formal___MMType___direct_type_t)CALL((recv), (SFT_metamodel___type_formal[0] + 0)))
#define ID_metamodel___type_formal___MMTypeFormal (SFT_metamodel___type_formal[1])
#define COLOR_metamodel___type_formal___MMTypeFormal (SFT_metamodel___type_formal[2])
#define ATTR_metamodel___type_formal___MMTypeFormal____name(recv) ATTR(recv, (SFT_metamodel___type_formal[3] + 0))
#define ATTR_metamodel___type_formal___MMTypeFormal____bound(recv) ATTR(recv, (SFT_metamodel___type_formal[3] + 1))
#define INIT_TABLE_POS_metamodel___type_formal___MMTypeFormal (SFT_metamodel___type_formal[4] + 0)
#define CALL_metamodel___type_formal___MMTypeFormal___name(recv) ((metamodel___type_formal___MMTypeFormal___name_t)CALL((recv), (SFT_metamodel___type_formal[4] + 1)))
#define CALL_metamodel___type_formal___MMTypeFormal___bound(recv) ((metamodel___type_formal___MMTypeFormal___bound_t)CALL((recv), (SFT_metamodel___type_formal[4] + 2)))
#define CALL_metamodel___type_formal___MMTypeFormal___init(recv) ((metamodel___type_formal___MMTypeFormal___init_t)CALL((recv), (SFT_metamodel___type_formal[4] + 3)))
static const char * const LOCATE_metamodel___type_formal___MMType___direct_type = "type_formal::MMType::direct_type";
val_t metamodel___type_formal___MMType___direct_type(val_t p0);
typedef val_t (*metamodel___type_formal___MMType___direct_type_t)(val_t p0);
val_t NEW_MMType_metamodel___static_type___MMType___init();
static const char * const LOCATE_metamodel___type_formal___MMTypeFormal___is_valid = "type_formal::MMTypeFormal::(static_type::MMType::is_valid)";
val_t metamodel___type_formal___MMTypeFormal___is_valid(val_t p0);
typedef val_t (*metamodel___type_formal___MMTypeFormal___is_valid_t)(val_t p0);
static const char * const LOCATE_metamodel___type_formal___MMTypeFormal___name = "type_formal::MMTypeFormal::name";
val_t metamodel___type_formal___MMTypeFormal___name(val_t p0);
typedef val_t (*metamodel___type_formal___MMTypeFormal___name_t)(val_t p0);
static const char * const LOCATE_metamodel___type_formal___MMTypeFormal___bound = "type_formal::MMTypeFormal::bound";
val_t metamodel___type_formal___MMTypeFormal___bound(val_t p0);
typedef val_t (*metamodel___type_formal___MMTypeFormal___bound_t)(val_t p0);
static const char * const LOCATE_metamodel___type_formal___MMTypeFormal_____l = "type_formal::MMTypeFormal::(static_type::MMType::<)";
val_t metamodel___type_formal___MMTypeFormal_____l(val_t p0, val_t p1);
typedef val_t (*metamodel___type_formal___MMTypeFormal_____l_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___type_formal___MMTypeFormal___is_supertype = "type_formal::MMTypeFormal::(static_type::MMType::is_supertype)";
val_t metamodel___type_formal___MMTypeFormal___is_supertype(val_t p0, val_t p1);
typedef val_t (*metamodel___type_formal___MMTypeFormal___is_supertype_t)(val_t p0, val_t p1);
static const char * const LOCATE_metamodel___type_formal___MMTypeFormal___is_nullable = "type_formal::MMTypeFormal::(static_type::MMType::is_nullable)";
val_t metamodel___type_formal___MMTypeFormal___is_nullable(val_t p0);
typedef val_t (*metamodel___type_formal___MMTypeFormal___is_nullable_t)(val_t p0);
static const char * const LOCATE_metamodel___type_formal___MMTypeFormal___direct_type = "type_formal::MMTypeFormal::(type_formal::MMType::direct_type)";
val_t metamodel___type_formal___MMTypeFormal___direct_type(val_t p0);
typedef val_t (*metamodel___type_formal___MMTypeFormal___direct_type_t)(val_t p0);
static const char * const LOCATE_metamodel___type_formal___MMTypeFormal___local_class = "type_formal::MMTypeFormal::(static_type::MMType::local_class)";
val_t metamodel___type_formal___MMTypeFormal___local_class(val_t p0);
typedef val_t (*metamodel___type_formal___MMTypeFormal___local_class_t)(val_t p0);
static const char * const LOCATE_metamodel___type_formal___MMTypeFormal___to_s = "type_formal::MMTypeFormal::(string::Object::to_s)";
val_t metamodel___type_formal___MMTypeFormal___to_s(val_t p0);
typedef val_t (*metamodel___type_formal___MMTypeFormal___to_s_t)(val_t p0);
static const char * const LOCATE_metamodel___type_formal___MMTypeFormal___init = "type_formal::MMTypeFormal::init";
void metamodel___type_formal___MMTypeFormal___init(val_t p0, val_t p1, val_t p2, int* init_table);
typedef void (*metamodel___type_formal___MMTypeFormal___init_t)(val_t p0, val_t p1, val_t p2, int* init_table);
val_t NEW_MMTypeFormal_metamodel___type_formal___MMTypeFormal___init(val_t p0, val_t p1);
#endif
