/* This C header file is generated by NIT to compile modules and programs that requires table_computation. */
#ifndef table_computation_sep
#define table_computation_sep
#include "program._sep.h"
#include <nit_common.h>

extern const classtable_elt_t VFT_ColorContext[];

extern const classtable_elt_t VFT_TableInformation[];

extern const classtable_elt_t VFT_CompiledClass[];

extern const classtable_elt_t VFT_AbsTableElt[];

extern const classtable_elt_t VFT_TableElt[];

extern const classtable_elt_t VFT_ModuleTableElt[];

extern const classtable_elt_t VFT_ModuleTableEltGroup[];

extern const classtable_elt_t VFT_TableEltProp[];

extern const classtable_elt_t VFT_TableEltMeth[];

extern const classtable_elt_t VFT_TableEltSuper[];

extern const classtable_elt_t VFT_TableEltAttr[];

extern const classtable_elt_t VFT_AbsTableEltClass[];

extern const classtable_elt_t VFT_TableEltClass[];

extern const classtable_elt_t VFT_TableEltClassId[];

extern const classtable_elt_t VFT_TableEltClassInitTable[];

extern const classtable_elt_t VFT_TableEltClassColor[];

extern const classtable_elt_t VFT_TableEltComposite[];

extern const classtable_elt_t VFT_TableEltClassSelfId[];

extern const classtable_elt_t VFT_TableEltClassObjectSize[];

extern const classtable_elt_t VFT_TableEltObjectId[];

extern const classtable_elt_t VFT_TableEltVftPointer[];
extern const char *LOCATE_table_computation;
extern const int SFT_table_computation[];
#define ID_ColorContext (SFT_table_computation[0])
#define COLOR_ColorContext (SFT_table_computation[1])
#define ATTR_table_computation___ColorContext____colors(recv) ATTR(recv, (SFT_table_computation[2] + 0))
#define INIT_TABLE_POS_ColorContext (SFT_table_computation[3] + 0)
#define CALL_table_computation___ColorContext___color(recv) ((table_computation___ColorContext___color_t)CALL((recv), (SFT_table_computation[3] + 1)))
#define CALL_table_computation___ColorContext___has_color(recv) ((table_computation___ColorContext___has_color_t)CALL((recv), (SFT_table_computation[3] + 2)))
#define CALL_table_computation___ColorContext___color__eq(recv) ((table_computation___ColorContext___color__eq_t)CALL((recv), (SFT_table_computation[3] + 3)))
#define CALL_table_computation___ColorContext___init(recv) ((table_computation___ColorContext___init_t)CALL((recv), (SFT_table_computation[3] + 4)))
#define ID_TableInformation (SFT_table_computation[4])
#define COLOR_TableInformation (SFT_table_computation[5])
#define ATTR_table_computation___TableInformation____max_class_table_length(recv) ATTR(recv, (SFT_table_computation[6] + 0))
#define INIT_TABLE_POS_TableInformation (SFT_table_computation[7] + 0)
#define CALL_table_computation___TableInformation___max_class_table_length(recv) ((table_computation___TableInformation___max_class_table_length_t)CALL((recv), (SFT_table_computation[7] + 1)))
#define CALL_table_computation___TableInformation___max_class_table_length__eq(recv) ((table_computation___TableInformation___max_class_table_length__eq_t)CALL((recv), (SFT_table_computation[7] + 2)))
#define ID_CompiledClass (SFT_table_computation[8])
#define COLOR_CompiledClass (SFT_table_computation[9])
#define ATTR_table_computation___CompiledClass____local_class(recv) ATTR(recv, (SFT_table_computation[10] + 0))
#define ATTR_table_computation___CompiledClass____id(recv) ATTR(recv, (SFT_table_computation[10] + 1))
#define ATTR_table_computation___CompiledClass____class_table(recv) ATTR(recv, (SFT_table_computation[10] + 2))
#define ATTR_table_computation___CompiledClass____instance_table(recv) ATTR(recv, (SFT_table_computation[10] + 3))
#define ATTR_table_computation___CompiledClass____class_layout(recv) ATTR(recv, (SFT_table_computation[10] + 4))
#define ATTR_table_computation___CompiledClass____instance_layout(recv) ATTR(recv, (SFT_table_computation[10] + 5))
#define INIT_TABLE_POS_CompiledClass (SFT_table_computation[11] + 0)
#define CALL_table_computation___CompiledClass___local_class(recv) ((table_computation___CompiledClass___local_class_t)CALL((recv), (SFT_table_computation[11] + 1)))
#define CALL_table_computation___CompiledClass___id(recv) ((table_computation___CompiledClass___id_t)CALL((recv), (SFT_table_computation[11] + 2)))
#define CALL_table_computation___CompiledClass___id__eq(recv) ((table_computation___CompiledClass___id__eq_t)CALL((recv), (SFT_table_computation[11] + 3)))
#define CALL_table_computation___CompiledClass___class_table(recv) ((table_computation___CompiledClass___class_table_t)CALL((recv), (SFT_table_computation[11] + 4)))
#define CALL_table_computation___CompiledClass___instance_table(recv) ((table_computation___CompiledClass___instance_table_t)CALL((recv), (SFT_table_computation[11] + 5)))
#define CALL_table_computation___CompiledClass___class_layout(recv) ((table_computation___CompiledClass___class_layout_t)CALL((recv), (SFT_table_computation[11] + 6)))
#define CALL_table_computation___CompiledClass___class_layout__eq(recv) ((table_computation___CompiledClass___class_layout__eq_t)CALL((recv), (SFT_table_computation[11] + 7)))
#define CALL_table_computation___CompiledClass___instance_layout(recv) ((table_computation___CompiledClass___instance_layout_t)CALL((recv), (SFT_table_computation[11] + 8)))
#define CALL_table_computation___CompiledClass___instance_layout__eq(recv) ((table_computation___CompiledClass___instance_layout__eq_t)CALL((recv), (SFT_table_computation[11] + 9)))
#define CALL_table_computation___CompiledClass___init(recv) ((table_computation___CompiledClass___init_t)CALL((recv), (SFT_table_computation[11] + 10)))
#define ATTR_table_computation___MMConcreteClass____class_color_pos(recv) ATTR(recv, (SFT_table_computation[12] + 0))
#define ATTR_table_computation___MMConcreteClass____class_layout(recv) ATTR(recv, (SFT_table_computation[12] + 1))
#define ATTR_table_computation___MMConcreteClass____instance_layout(recv) ATTR(recv, (SFT_table_computation[12] + 2))
#define CALL_table_computation___MMConcreteClass___class_color_pos(recv) ((table_computation___MMConcreteClass___class_color_pos_t)CALL((recv), (SFT_table_computation[13] + 0)))
#define CALL_table_computation___MMConcreteClass___class_layout(recv) ((table_computation___MMConcreteClass___class_layout_t)CALL((recv), (SFT_table_computation[13] + 1)))
#define CALL_table_computation___MMConcreteClass___instance_layout(recv) ((table_computation___MMConcreteClass___instance_layout_t)CALL((recv), (SFT_table_computation[13] + 2)))
#define CALL_table_computation___MMConcreteClass___build_layout_in(recv) ((table_computation___MMConcreteClass___build_layout_in_t)CALL((recv), (SFT_table_computation[13] + 3)))
#define ATTR_table_computation___Program____table_information(recv) ATTR(recv, (SFT_table_computation[14] + 0))
#define ATTR_table_computation___Program____compiled_classes(recv) ATTR(recv, (SFT_table_computation[14] + 1))
#define CALL_table_computation___Program___table_information(recv) ((table_computation___Program___table_information_t)CALL((recv), (SFT_table_computation[15] + 0)))
#define CALL_table_computation___Program___compiled_classes(recv) ((table_computation___Program___compiled_classes_t)CALL((recv), (SFT_table_computation[15] + 1)))
#define CALL_table_computation___Program___do_table_computation(recv) ((table_computation___Program___do_table_computation_t)CALL((recv), (SFT_table_computation[15] + 2)))
#define CALL_table_computation___Program___do_global_table_analysis(recv) ((table_computation___Program___do_global_table_analysis_t)CALL((recv), (SFT_table_computation[15] + 3)))
#define CALL_table_computation___Program___colorize(recv) ((table_computation___Program___colorize_t)CALL((recv), (SFT_table_computation[15] + 4)))
#define CALL_table_computation___Program___free_color(recv) ((table_computation___Program___free_color_t)CALL((recv), (SFT_table_computation[15] + 5)))
#define CALL_table_computation___Program___append_to_table(recv) ((table_computation___Program___append_to_table_t)CALL((recv), (SFT_table_computation[15] + 6)))
#define CALL_table_computation___Program___build_tables_in(recv) ((table_computation___Program___build_tables_in_t)CALL((recv), (SFT_table_computation[15] + 7)))
#define ATTR_table_computation___MMModule____local_table(recv) ATTR(recv, (SFT_table_computation[16] + 0))
#define CALL_table_computation___MMModule___local_table(recv) ((table_computation___MMModule___local_table_t)CALL((recv), (SFT_table_computation[17] + 0)))
#define CALL_table_computation___MMModule___local_analysis(recv) ((table_computation___MMModule___local_analysis_t)CALL((recv), (SFT_table_computation[17] + 1)))
#define ID_AbsTableElt (SFT_table_computation[18])
#define COLOR_AbsTableElt (SFT_table_computation[19])
#define INIT_TABLE_POS_AbsTableElt (SFT_table_computation[20] + 0)
#define CALL_table_computation___AbsTableElt___init(recv) ((table_computation___AbsTableElt___init_t)CALL((recv), (SFT_table_computation[20] + 1)))
#define ID_TableElt (SFT_table_computation[21])
#define COLOR_TableElt (SFT_table_computation[22])
#define INIT_TABLE_POS_TableElt (SFT_table_computation[23] + 0)
#define CALL_table_computation___TableElt___is_related_to(recv) ((table_computation___TableElt___is_related_to_t)CALL((recv), (SFT_table_computation[23] + 1)))
#define CALL_table_computation___TableElt___length(recv) ((table_computation___TableElt___length_t)CALL((recv), (SFT_table_computation[23] + 2)))
#define CALL_table_computation___TableElt___item(recv) ((table_computation___TableElt___item_t)CALL((recv), (SFT_table_computation[23] + 3)))
#define ID_ModuleTableElt (SFT_table_computation[24])
#define COLOR_ModuleTableElt (SFT_table_computation[25])
#define INIT_TABLE_POS_ModuleTableElt (SFT_table_computation[26] + 0)
#define ID_ModuleTableEltGroup (SFT_table_computation[27])
#define COLOR_ModuleTableEltGroup (SFT_table_computation[28])
#define ATTR_table_computation___ModuleTableEltGroup____elements(recv) ATTR(recv, (SFT_table_computation[29] + 0))
#define INIT_TABLE_POS_ModuleTableEltGroup (SFT_table_computation[30] + 0)
#define CALL_table_computation___ModuleTableEltGroup___elements(recv) ((table_computation___ModuleTableEltGroup___elements_t)CALL((recv), (SFT_table_computation[30] + 1)))
#define ID_TableEltProp (SFT_table_computation[31])
#define COLOR_TableEltProp (SFT_table_computation[32])
#define ATTR_table_computation___TableEltProp____property(recv) ATTR(recv, (SFT_table_computation[33] + 0))
#define INIT_TABLE_POS_TableEltProp (SFT_table_computation[34] + 0)
#define CALL_table_computation___TableEltProp___property(recv) ((table_computation___TableEltProp___property_t)CALL((recv), (SFT_table_computation[34] + 1)))
#define CALL_table_computation___TableEltProp___init(recv) ((table_computation___TableEltProp___init_t)CALL((recv), (SFT_table_computation[34] + 2)))
#define ID_TableEltMeth (SFT_table_computation[35])
#define COLOR_TableEltMeth (SFT_table_computation[36])
#define INIT_TABLE_POS_TableEltMeth (SFT_table_computation[37] + 0)
#define ID_TableEltSuper (SFT_table_computation[38])
#define COLOR_TableEltSuper (SFT_table_computation[39])
#define INIT_TABLE_POS_TableEltSuper (SFT_table_computation[40] + 0)
#define ID_TableEltAttr (SFT_table_computation[41])
#define COLOR_TableEltAttr (SFT_table_computation[42])
#define INIT_TABLE_POS_TableEltAttr (SFT_table_computation[43] + 0)
#define ID_AbsTableEltClass (SFT_table_computation[44])
#define COLOR_AbsTableEltClass (SFT_table_computation[45])
#define ATTR_table_computation___AbsTableEltClass____local_class(recv) ATTR(recv, (SFT_table_computation[46] + 0))
#define INIT_TABLE_POS_AbsTableEltClass (SFT_table_computation[47] + 0)
#define CALL_table_computation___AbsTableEltClass___local_class(recv) ((table_computation___AbsTableEltClass___local_class_t)CALL((recv), (SFT_table_computation[47] + 1)))
#define CALL_table_computation___AbsTableEltClass___init(recv) ((table_computation___AbsTableEltClass___init_t)CALL((recv), (SFT_table_computation[47] + 2)))
#define ID_TableEltClass (SFT_table_computation[48])
#define COLOR_TableEltClass (SFT_table_computation[49])
#define INIT_TABLE_POS_TableEltClass (SFT_table_computation[50] + 0)
#define ID_TableEltClassId (SFT_table_computation[51])
#define COLOR_TableEltClassId (SFT_table_computation[52])
#define INIT_TABLE_POS_TableEltClassId (SFT_table_computation[53] + 0)
#define ID_TableEltClassInitTable (SFT_table_computation[54])
#define COLOR_TableEltClassInitTable (SFT_table_computation[55])
#define INIT_TABLE_POS_TableEltClassInitTable (SFT_table_computation[56] + 0)
#define ID_TableEltClassColor (SFT_table_computation[57])
#define COLOR_TableEltClassColor (SFT_table_computation[58])
#define INIT_TABLE_POS_TableEltClassColor (SFT_table_computation[59] + 0)
#define ID_TableEltComposite (SFT_table_computation[60])
#define COLOR_TableEltComposite (SFT_table_computation[61])
#define ATTR_table_computation___TableEltComposite____table(recv) ATTR(recv, (SFT_table_computation[62] + 0))
#define ATTR_table_computation___TableEltComposite____cc(recv) ATTR(recv, (SFT_table_computation[62] + 1))
#define ATTR_table_computation___TableEltComposite____offsets(recv) ATTR(recv, (SFT_table_computation[62] + 2))
#define INIT_TABLE_POS_TableEltComposite (SFT_table_computation[63] + 0)
#define CALL_table_computation___TableEltComposite___add(recv) ((table_computation___TableEltComposite___add_t)CALL((recv), (SFT_table_computation[63] + 1)))
#define CALL_table_computation___TableEltComposite___init(recv) ((table_computation___TableEltComposite___init_t)CALL((recv), (SFT_table_computation[63] + 2)))
#define ID_TableEltClassSelfId (SFT_table_computation[64])
#define COLOR_TableEltClassSelfId (SFT_table_computation[65])
#define INIT_TABLE_POS_TableEltClassSelfId (SFT_table_computation[66] + 0)
#define ID_TableEltClassObjectSize (SFT_table_computation[67])
#define COLOR_TableEltClassObjectSize (SFT_table_computation[68])
#define INIT_TABLE_POS_TableEltClassObjectSize (SFT_table_computation[69] + 0)
#define ID_TableEltObjectId (SFT_table_computation[70])
#define COLOR_TableEltObjectId (SFT_table_computation[71])
#define INIT_TABLE_POS_TableEltObjectId (SFT_table_computation[72] + 0)
#define ID_TableEltVftPointer (SFT_table_computation[73])
#define COLOR_TableEltVftPointer (SFT_table_computation[74])
#define INIT_TABLE_POS_TableEltVftPointer (SFT_table_computation[75] + 0)
static const char * const LOCATE_table_computation___ColorContext___color = "table_computation::ColorContext::color";
val_t table_computation___ColorContext___color(val_t p0, val_t p1);
typedef val_t (*table_computation___ColorContext___color_t)(val_t p0, val_t p1);
static const char * const LOCATE_table_computation___ColorContext___has_color = "table_computation::ColorContext::has_color";
val_t table_computation___ColorContext___has_color(val_t p0, val_t p1);
typedef val_t (*table_computation___ColorContext___has_color_t)(val_t p0, val_t p1);
static const char * const LOCATE_table_computation___ColorContext___color__eq = "table_computation::ColorContext::color=";
void table_computation___ColorContext___color__eq(val_t p0, val_t p1, val_t p2);
typedef void (*table_computation___ColorContext___color__eq_t)(val_t p0, val_t p1, val_t p2);
static const char * const LOCATE_table_computation___ColorContext___init = "table_computation::ColorContext::init";
void table_computation___ColorContext___init(val_t p0, int* init_table);
typedef void (*table_computation___ColorContext___init_t)(val_t p0, int* init_table);
val_t NEW_ColorContext_table_computation___ColorContext___init();
static const char * const LOCATE_table_computation___TableInformation___max_class_table_length = "table_computation::TableInformation::max_class_table_length";
val_t table_computation___TableInformation___max_class_table_length(val_t p0);
typedef val_t (*table_computation___TableInformation___max_class_table_length_t)(val_t p0);
static const char * const LOCATE_table_computation___TableInformation___max_class_table_length__eq = "table_computation::TableInformation::max_class_table_length=";
void table_computation___TableInformation___max_class_table_length__eq(val_t p0, val_t p1);
typedef void (*table_computation___TableInformation___max_class_table_length__eq_t)(val_t p0, val_t p1);
val_t NEW_TableInformation_table_computation___ColorContext___init();
static const char * const LOCATE_table_computation___CompiledClass___local_class = "table_computation::CompiledClass::local_class";
val_t table_computation___CompiledClass___local_class(val_t p0);
typedef val_t (*table_computation___CompiledClass___local_class_t)(val_t p0);
static const char * const LOCATE_table_computation___CompiledClass___id = "table_computation::CompiledClass::id";
val_t table_computation___CompiledClass___id(val_t p0);
typedef val_t (*table_computation___CompiledClass___id_t)(val_t p0);
static const char * const LOCATE_table_computation___CompiledClass___id__eq = "table_computation::CompiledClass::id=";
void table_computation___CompiledClass___id__eq(val_t p0, val_t p1);
typedef void (*table_computation___CompiledClass___id__eq_t)(val_t p0, val_t p1);
static const char * const LOCATE_table_computation___CompiledClass___class_table = "table_computation::CompiledClass::class_table";
val_t table_computation___CompiledClass___class_table(val_t p0);
typedef val_t (*table_computation___CompiledClass___class_table_t)(val_t p0);
static const char * const LOCATE_table_computation___CompiledClass___instance_table = "table_computation::CompiledClass::instance_table";
val_t table_computation___CompiledClass___instance_table(val_t p0);
typedef val_t (*table_computation___CompiledClass___instance_table_t)(val_t p0);
static const char * const LOCATE_table_computation___CompiledClass___class_layout = "table_computation::CompiledClass::class_layout";
val_t table_computation___CompiledClass___class_layout(val_t p0);
typedef val_t (*table_computation___CompiledClass___class_layout_t)(val_t p0);
static const char * const LOCATE_table_computation___CompiledClass___class_layout__eq = "table_computation::CompiledClass::class_layout=";
void table_computation___CompiledClass___class_layout__eq(val_t p0, val_t p1);
typedef void (*table_computation___CompiledClass___class_layout__eq_t)(val_t p0, val_t p1);
static const char * const LOCATE_table_computation___CompiledClass___instance_layout = "table_computation::CompiledClass::instance_layout";
val_t table_computation___CompiledClass___instance_layout(val_t p0);
typedef val_t (*table_computation___CompiledClass___instance_layout_t)(val_t p0);
static const char * const LOCATE_table_computation___CompiledClass___instance_layout__eq = "table_computation::CompiledClass::instance_layout=";
void table_computation___CompiledClass___instance_layout__eq(val_t p0, val_t p1);
typedef void (*table_computation___CompiledClass___instance_layout__eq_t)(val_t p0, val_t p1);
static const char * const LOCATE_table_computation___CompiledClass___init = "table_computation::CompiledClass::init";
void table_computation___CompiledClass___init(val_t p0, val_t p1, int* init_table);
typedef void (*table_computation___CompiledClass___init_t)(val_t p0, val_t p1, int* init_table);
val_t NEW_CompiledClass_table_computation___CompiledClass___init(val_t p0);
static const char * const LOCATE_table_computation___MMConcreteClass___class_color_pos = "table_computation::MMConcreteClass::class_color_pos";
val_t table_computation___MMConcreteClass___class_color_pos(val_t p0);
typedef val_t (*table_computation___MMConcreteClass___class_color_pos_t)(val_t p0);
static const char * const LOCATE_table_computation___MMConcreteClass___class_layout = "table_computation::MMConcreteClass::class_layout";
val_t table_computation___MMConcreteClass___class_layout(val_t p0);
typedef val_t (*table_computation___MMConcreteClass___class_layout_t)(val_t p0);
static const char * const LOCATE_table_computation___MMConcreteClass___instance_layout = "table_computation::MMConcreteClass::instance_layout";
val_t table_computation___MMConcreteClass___instance_layout(val_t p0);
typedef val_t (*table_computation___MMConcreteClass___instance_layout_t)(val_t p0);
static const char * const LOCATE_table_computation___MMConcreteClass___build_layout_in = "table_computation::MMConcreteClass::build_layout_in";
void table_computation___MMConcreteClass___build_layout_in(val_t p0, val_t p1);
typedef void (*table_computation___MMConcreteClass___build_layout_in_t)(val_t p0, val_t p1);
  typedef void (*CLOS_OC_table_computation___MMConcreteClass___build_layout_in_1_0)(struct stack_frame_t *);
  void OC_table_computation___MMConcreteClass___build_layout_in_1(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
  typedef void (*OC_table_computation___MMConcreteClass___build_layout_in_1_t)(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
val_t NEW_MMConcreteClass_abstractmetamodel___MMLocalClass___init(val_t p0, val_t p1, val_t p2);
static const char * const LOCATE_table_computation___Program___table_information = "table_computation::Program::table_information";
val_t table_computation___Program___table_information(val_t p0);
typedef val_t (*table_computation___Program___table_information_t)(val_t p0);
static const char * const LOCATE_table_computation___Program___compiled_classes = "table_computation::Program::compiled_classes";
val_t table_computation___Program___compiled_classes(val_t p0);
typedef val_t (*table_computation___Program___compiled_classes_t)(val_t p0);
static const char * const LOCATE_table_computation___Program___do_table_computation = "table_computation::Program::do_table_computation";
void table_computation___Program___do_table_computation(val_t p0);
typedef void (*table_computation___Program___do_table_computation_t)(val_t p0);
  typedef void (*CLOS_OC_table_computation___Program___do_table_computation_2_0)(struct stack_frame_t *);
  void OC_table_computation___Program___do_table_computation_2(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
  typedef void (*OC_table_computation___Program___do_table_computation_2_t)(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
static const char * const LOCATE_table_computation___Program___do_global_table_analysis = "table_computation::Program::do_global_table_analysis";
void table_computation___Program___do_global_table_analysis(val_t p0);
typedef void (*table_computation___Program___do_global_table_analysis_t)(val_t p0);
  typedef void (*CLOS_OC_table_computation___Program___do_global_table_analysis_1_0)(struct stack_frame_t *);
  void OC_table_computation___Program___do_global_table_analysis_1(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
  typedef void (*OC_table_computation___Program___do_global_table_analysis_1_t)(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
  val_t OC_table_computation___Program___do_global_table_analysis_2(struct stack_frame_t *closctx, val_t p0, val_t p1);
  typedef val_t (*OC_table_computation___Program___do_global_table_analysis_2_t)(struct stack_frame_t *closctx, val_t p0, val_t p1);
      void OC_table_computation___Program___do_global_table_analysis_8(struct stack_frame_t *closctx, val_t p0);
      typedef void (*OC_table_computation___Program___do_global_table_analysis_8_t)(struct stack_frame_t *closctx, val_t p0);
static const char * const LOCATE_table_computation___Program___colorize = "table_computation::Program::colorize";
void table_computation___Program___colorize(val_t p0, val_t p1, val_t p2, val_t p3);
typedef void (*table_computation___Program___colorize_t)(val_t p0, val_t p1, val_t p2, val_t p3);
        void OC_table_computation___Program___colorize_1(struct stack_frame_t *closctx, val_t p0);
        typedef void (*OC_table_computation___Program___colorize_1_t)(struct stack_frame_t *closctx, val_t p0);
static const char * const LOCATE_table_computation___Program___free_color = "table_computation::Program::free_color";
val_t table_computation___Program___free_color(val_t p0, val_t p1, val_t p2);
typedef val_t (*table_computation___Program___free_color_t)(val_t p0, val_t p1, val_t p2);
static const char * const LOCATE_table_computation___Program___append_to_table = "table_computation::Program::append_to_table";
void table_computation___Program___append_to_table(val_t p0, val_t p1, val_t p2);
typedef void (*table_computation___Program___append_to_table_t)(val_t p0, val_t p1, val_t p2);
static const char * const LOCATE_table_computation___Program___build_tables_in = "table_computation::Program::build_tables_in";
void table_computation___Program___build_tables_in(val_t p0, val_t p1, val_t p2, val_t p3);
typedef void (*table_computation___Program___build_tables_in_t)(val_t p0, val_t p1, val_t p2, val_t p3);
val_t NEW_Program_program___Program___init(val_t p0, val_t p1);
static const char * const LOCATE_table_computation___MMModule___local_table = "table_computation::MMModule::local_table";
val_t table_computation___MMModule___local_table(val_t p0);
typedef val_t (*table_computation___MMModule___local_table_t)(val_t p0);
static const char * const LOCATE_table_computation___MMModule___local_analysis = "table_computation::MMModule::local_analysis";
void table_computation___MMModule___local_analysis(val_t p0);
typedef void (*table_computation___MMModule___local_analysis_t)(val_t p0);
  typedef void (*CLOS_OC_table_computation___MMModule___local_analysis_1_0)(struct stack_frame_t *);
  void OC_table_computation___MMModule___local_analysis_1(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
  typedef void (*OC_table_computation___MMModule___local_analysis_1_t)(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
val_t NEW_MMModule_abstractmetamodel___MMModule___init(val_t p0, val_t p1, val_t p2, val_t p3);
static const char * const LOCATE_table_computation___AbsTableElt___init = "table_computation::AbsTableElt::init";
void table_computation___AbsTableElt___init(val_t p0, int* init_table);
typedef void (*table_computation___AbsTableElt___init_t)(val_t p0, int* init_table);
val_t NEW_AbsTableElt_table_computation___AbsTableElt___init();
static const char * const LOCATE_table_computation___TableElt___is_related_to = "table_computation::TableElt::is_related_to";
val_t table_computation___TableElt___is_related_to(val_t p0, val_t p1);
typedef val_t (*table_computation___TableElt___is_related_to_t)(val_t p0, val_t p1);
static const char * const LOCATE_table_computation___TableElt___length = "table_computation::TableElt::length";
val_t table_computation___TableElt___length(val_t p0);
typedef val_t (*table_computation___TableElt___length_t)(val_t p0);
static const char * const LOCATE_table_computation___TableElt___item = "table_computation::TableElt::item";
val_t table_computation___TableElt___item(val_t p0, val_t p1);
typedef val_t (*table_computation___TableElt___item_t)(val_t p0, val_t p1);
val_t NEW_TableElt_table_computation___AbsTableElt___init();
val_t NEW_ModuleTableElt_table_computation___AbsTableElt___init();
static const char * const LOCATE_table_computation___ModuleTableEltGroup___elements = "table_computation::ModuleTableEltGroup::elements";
val_t table_computation___ModuleTableEltGroup___elements(val_t p0);
typedef val_t (*table_computation___ModuleTableEltGroup___elements_t)(val_t p0);
val_t NEW_ModuleTableEltGroup_table_computation___AbsTableElt___init();
static const char * const LOCATE_table_computation___TableEltProp___property = "table_computation::TableEltProp::property";
val_t table_computation___TableEltProp___property(val_t p0);
typedef val_t (*table_computation___TableEltProp___property_t)(val_t p0);
static const char * const LOCATE_table_computation___TableEltProp___init = "table_computation::TableEltProp::init";
void table_computation___TableEltProp___init(val_t p0, val_t p1, int* init_table);
typedef void (*table_computation___TableEltProp___init_t)(val_t p0, val_t p1, int* init_table);
val_t NEW_TableEltProp_table_computation___TableEltProp___init(val_t p0);
val_t NEW_TableEltMeth_table_computation___TableEltProp___init(val_t p0);
val_t NEW_TableEltSuper_table_computation___TableEltProp___init(val_t p0);
val_t NEW_TableEltAttr_table_computation___TableEltProp___init(val_t p0);
static const char * const LOCATE_table_computation___AbsTableEltClass___local_class = "table_computation::AbsTableEltClass::local_class";
val_t table_computation___AbsTableEltClass___local_class(val_t p0);
typedef val_t (*table_computation___AbsTableEltClass___local_class_t)(val_t p0);
static const char * const LOCATE_table_computation___AbsTableEltClass___init = "table_computation::AbsTableEltClass::init";
void table_computation___AbsTableEltClass___init(val_t p0, val_t p1, int* init_table);
typedef void (*table_computation___AbsTableEltClass___init_t)(val_t p0, val_t p1, int* init_table);
val_t NEW_AbsTableEltClass_table_computation___AbsTableEltClass___init(val_t p0);
static const char * const LOCATE_table_computation___TableEltClass___is_related_to = "table_computation::TableEltClass::(table_computation::TableElt::is_related_to)";
val_t table_computation___TableEltClass___is_related_to(val_t p0, val_t p1);
typedef val_t (*table_computation___TableEltClass___is_related_to_t)(val_t p0, val_t p1);
val_t NEW_TableEltClass_table_computation___AbsTableEltClass___init(val_t p0);
val_t NEW_TableEltClassId_table_computation___AbsTableEltClass___init(val_t p0);
val_t NEW_TableEltClassInitTable_table_computation___AbsTableEltClass___init(val_t p0);
val_t NEW_TableEltClassColor_table_computation___AbsTableEltClass___init(val_t p0);
static const char * const LOCATE_table_computation___TableEltComposite___length = "table_computation::TableEltComposite::(table_computation::TableElt::length)";
val_t table_computation___TableEltComposite___length(val_t p0);
typedef val_t (*table_computation___TableEltComposite___length_t)(val_t p0);
static const char * const LOCATE_table_computation___TableEltComposite___is_related_to = "table_computation::TableEltComposite::(table_computation::TableElt::is_related_to)";
val_t table_computation___TableEltComposite___is_related_to(val_t p0, val_t p1);
typedef val_t (*table_computation___TableEltComposite___is_related_to_t)(val_t p0, val_t p1);
static const char * const LOCATE_table_computation___TableEltComposite___add = "table_computation::TableEltComposite::add";
void table_computation___TableEltComposite___add(val_t p0, val_t p1, val_t p2);
typedef void (*table_computation___TableEltComposite___add_t)(val_t p0, val_t p1, val_t p2);
static const char * const LOCATE_table_computation___TableEltComposite___item = "table_computation::TableEltComposite::(table_computation::TableElt::item)";
val_t table_computation___TableEltComposite___item(val_t p0, val_t p1);
typedef val_t (*table_computation___TableEltComposite___item_t)(val_t p0, val_t p1);
static const char * const LOCATE_table_computation___TableEltComposite___init = "table_computation::TableEltComposite::init";
void table_computation___TableEltComposite___init(val_t p0, val_t p1, int* init_table);
typedef void (*table_computation___TableEltComposite___init_t)(val_t p0, val_t p1, int* init_table);
val_t NEW_TableEltComposite_table_computation___TableEltComposite___init(val_t p0);
static const char * const LOCATE_table_computation___TableEltClassSelfId___is_related_to = "table_computation::TableEltClassSelfId::(table_computation::TableElt::is_related_to)";
val_t table_computation___TableEltClassSelfId___is_related_to(val_t p0, val_t p1);
typedef val_t (*table_computation___TableEltClassSelfId___is_related_to_t)(val_t p0, val_t p1);
val_t NEW_TableEltClassSelfId_table_computation___AbsTableElt___init();
static const char * const LOCATE_table_computation___TableEltClassObjectSize___is_related_to = "table_computation::TableEltClassObjectSize::(table_computation::TableElt::is_related_to)";
val_t table_computation___TableEltClassObjectSize___is_related_to(val_t p0, val_t p1);
typedef val_t (*table_computation___TableEltClassObjectSize___is_related_to_t)(val_t p0, val_t p1);
val_t NEW_TableEltClassObjectSize_table_computation___AbsTableElt___init();
static const char * const LOCATE_table_computation___TableEltObjectId___is_related_to = "table_computation::TableEltObjectId::(table_computation::TableElt::is_related_to)";
val_t table_computation___TableEltObjectId___is_related_to(val_t p0, val_t p1);
typedef val_t (*table_computation___TableEltObjectId___is_related_to_t)(val_t p0, val_t p1);
val_t NEW_TableEltObjectId_table_computation___AbsTableElt___init();
static const char * const LOCATE_table_computation___TableEltVftPointer___is_related_to = "table_computation::TableEltVftPointer::(table_computation::TableElt::is_related_to)";
val_t table_computation___TableEltVftPointer___is_related_to(val_t p0, val_t p1);
typedef val_t (*table_computation___TableEltVftPointer___is_related_to_t)(val_t p0, val_t p1);
val_t NEW_TableEltVftPointer_table_computation___AbsTableElt___init();
#endif
