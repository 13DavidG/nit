/* This C header file is generated by NIT to compile modules and programs that requires compiling_global. */
#ifndef compiling_global_sep
#define compiling_global_sep
#include "table_computation._sep.h"
#include "compiling_icode._sep.h"
#include <nit_common.h>

extern const classtable_elt_t VFT_GlobalCompilerVisitor[];
extern const char *LOCATE_compiling_global;
extern const int SFT_compiling_global[];
#define ID_GlobalCompilerVisitor (SFT_compiling_global[0])
#define COLOR_GlobalCompilerVisitor (SFT_compiling_global[1])
#define ATTR_compiling_global___GlobalCompilerVisitor____program(recv) ATTR(recv, (SFT_compiling_global[2] + 0))
#define INIT_TABLE_POS_GlobalCompilerVisitor (SFT_compiling_global[3] + 0)
#define CALL_compiling_global___GlobalCompilerVisitor___program(recv) ((compiling_global___GlobalCompilerVisitor___program_t)CALL((recv), (SFT_compiling_global[3] + 1)))
#define CALL_compiling_global___GlobalCompilerVisitor___init(recv) ((compiling_global___GlobalCompilerVisitor___init_t)CALL((recv), (SFT_compiling_global[3] + 2)))
#define CALL_compiling_global___Program___compile_tables_to_c(recv) ((compiling_global___Program___compile_tables_to_c_t)CALL((recv), (SFT_compiling_global[4] + 0)))
#define CALL_compiling_global___Program___compile_main_part(recv) ((compiling_global___Program___compile_main_part_t)CALL((recv), (SFT_compiling_global[4] + 1)))
#define CALL_compiling_global___MMModule___declare_class_tables_to_c(recv) ((compiling_global___MMModule___declare_class_tables_to_c_t)CALL((recv), (SFT_compiling_global[5] + 0)))
#define CALL_compiling_global___MMModule___compile_mod_to_c(recv) ((compiling_global___MMModule___compile_mod_to_c_t)CALL((recv), (SFT_compiling_global[5] + 1)))
#define CALL_compiling_global___MMModule___compile_local_table_to_c(recv) ((compiling_global___MMModule___compile_local_table_to_c_t)CALL((recv), (SFT_compiling_global[5] + 2)))
#define CALL_compiling_global___AbsTableElt___compile_macros(recv) ((compiling_global___AbsTableElt___compile_macros_t)CALL((recv), (SFT_compiling_global[6] + 0)))
#define CALL_compiling_global___TableElt___compile_to_c(recv) ((compiling_global___TableElt___compile_to_c_t)CALL((recv), (SFT_compiling_global[7] + 0)))
#define CALL_compiling_global___ModuleTableElt___value(recv) ((compiling_global___ModuleTableElt___value_t)CALL((recv), (SFT_compiling_global[8] + 0)))
#define CALL_compiling_global___AbsTableEltClass___symbol(recv) ((compiling_global___AbsTableEltClass___symbol_t)CALL((recv), (SFT_compiling_global[9] + 0)))
#define ATTR_compiling_global___MMLocalClass____init_var_iroutine(recv) ATTR(recv, (SFT_compiling_global[10] + 0))
#define ATTR_compiling_global___MMLocalClass____checknew_iroutine(recv) ATTR(recv, (SFT_compiling_global[10] + 1))
#define ATTR_compiling_global___MMLocalClass____new_instance_iroutine(recv) ATTR(recv, (SFT_compiling_global[10] + 2))
#define CALL_compiling_global___MMLocalClass___declare_tables_to_c(recv) ((compiling_global___MMLocalClass___declare_tables_to_c_t)CALL((recv), (SFT_compiling_global[11] + 0)))
#define CALL_compiling_global___MMLocalClass___generate_allocation_iroutines(recv) ((compiling_global___MMLocalClass___generate_allocation_iroutines_t)CALL((recv), (SFT_compiling_global[11] + 1)))
#define CALL_compiling_global___MMLocalClass___compile_tables_to_c(recv) ((compiling_global___MMLocalClass___compile_tables_to_c_t)CALL((recv), (SFT_compiling_global[11] + 2)))
#define CALL_compiling_global___MMMethod___compile_property_to_c(recv) ((compiling_global___MMMethod___compile_property_to_c_t)CALL((recv), (SFT_compiling_global[12] + 0)))
#define LOCATE_compiling_global___GlobalCompilerVisitor___program "compiling_global::GlobalCompilerVisitor::program"
val_t compiling_global___GlobalCompilerVisitor___program(val_t p0);
typedef val_t (*compiling_global___GlobalCompilerVisitor___program_t)(val_t p0);
#define LOCATE_compiling_global___GlobalCompilerVisitor___init "compiling_global::GlobalCompilerVisitor::init"
void compiling_global___GlobalCompilerVisitor___init(val_t p0, val_t p1, val_t p2, val_t p3, int* init_table);
typedef void (*compiling_global___GlobalCompilerVisitor___init_t)(val_t p0, val_t p1, val_t p2, val_t p3, int* init_table);
val_t NEW_GlobalCompilerVisitor_compiling_global___GlobalCompilerVisitor___init(val_t p0, val_t p1, val_t p2);
val_t NEW_Program_program___Program___init(val_t p0);
#define LOCATE_compiling_global___Program___compile_tables_to_c "compiling_global::Program::compile_tables_to_c"
void compiling_global___Program___compile_tables_to_c(val_t p0, val_t p1);
typedef void (*compiling_global___Program___compile_tables_to_c_t)(val_t p0, val_t p1);
#define LOCATE_compiling_global___Program___compile_main_part "compiling_global::Program::compile_main_part"
void compiling_global___Program___compile_main_part(val_t p0, val_t p1);
typedef void (*compiling_global___Program___compile_main_part_t)(val_t p0, val_t p1);
val_t NEW_MMModule_abstractmetamodel___MMModule___init(val_t p0, val_t p1, val_t p2, val_t p3);
#define LOCATE_compiling_global___MMModule___declare_class_tables_to_c "compiling_global::MMModule::declare_class_tables_to_c"
void compiling_global___MMModule___declare_class_tables_to_c(val_t p0, val_t p1);
typedef void (*compiling_global___MMModule___declare_class_tables_to_c_t)(val_t p0, val_t p1);
#define LOCATE_compiling_global___MMModule___compile_mod_to_c "compiling_global::MMModule::compile_mod_to_c"
void compiling_global___MMModule___compile_mod_to_c(val_t p0, val_t p1);
typedef void (*compiling_global___MMModule___compile_mod_to_c_t)(val_t p0, val_t p1);
#define LOCATE_compiling_global___MMModule___compile_local_table_to_c "compiling_global::MMModule::compile_local_table_to_c"
void compiling_global___MMModule___compile_local_table_to_c(val_t p0, val_t p1);
typedef void (*compiling_global___MMModule___compile_local_table_to_c_t)(val_t p0, val_t p1);
val_t NEW_AbsTableElt_table_computation___AbsTableElt___init();
#define LOCATE_compiling_global___AbsTableElt___compile_macros "compiling_global::AbsTableElt::compile_macros"
void compiling_global___AbsTableElt___compile_macros(val_t p0, val_t p1, val_t p2);
typedef void (*compiling_global___AbsTableElt___compile_macros_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_TableElt_table_computation___AbsTableElt___init();
#define LOCATE_compiling_global___TableElt___compile_to_c "compiling_global::TableElt::compile_to_c"
val_t compiling_global___TableElt___compile_to_c(val_t p0, val_t p1, val_t p2);
typedef val_t (*compiling_global___TableElt___compile_to_c_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_ModuleTableElt_table_computation___AbsTableElt___init();
#define LOCATE_compiling_global___ModuleTableElt___value "compiling_global::ModuleTableElt::value"
val_t compiling_global___ModuleTableElt___value(val_t p0, val_t p1);
typedef val_t (*compiling_global___ModuleTableElt___value_t)(val_t p0, val_t p1);
val_t NEW_ModuleTableEltGroup_table_computation___AbsTableElt___init();
#define LOCATE_compiling_global___ModuleTableEltGroup___compile_macros "compiling_global::ModuleTableEltGroup::(compiling_global::AbsTableElt::compile_macros)"
void compiling_global___ModuleTableEltGroup___compile_macros(val_t p0, val_t p1, val_t p2);
typedef void (*compiling_global___ModuleTableEltGroup___compile_macros_t)(val_t p0, val_t p1, val_t p2);
#define LOCATE_compiling_global___ModuleTableEltGroup___value "compiling_global::ModuleTableEltGroup::(compiling_global::ModuleTableElt::value)"
val_t compiling_global___ModuleTableEltGroup___value(val_t p0, val_t p1);
typedef val_t (*compiling_global___ModuleTableEltGroup___value_t)(val_t p0, val_t p1);
val_t NEW_TableEltMeth_table_computation___TableEltProp___init(val_t p0);
#define LOCATE_compiling_global___TableEltMeth___compile_macros "compiling_global::TableEltMeth::(compiling_global::AbsTableElt::compile_macros)"
void compiling_global___TableEltMeth___compile_macros(val_t p0, val_t p1, val_t p2);
typedef void (*compiling_global___TableEltMeth___compile_macros_t)(val_t p0, val_t p1, val_t p2);
#define LOCATE_compiling_global___TableEltMeth___compile_to_c "compiling_global::TableEltMeth::(compiling_global::TableElt::compile_to_c)"
val_t compiling_global___TableEltMeth___compile_to_c(val_t p0, val_t p1, val_t p2);
typedef val_t (*compiling_global___TableEltMeth___compile_to_c_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_TableEltSuper_table_computation___TableEltProp___init(val_t p0);
#define LOCATE_compiling_global___TableEltSuper___compile_macros "compiling_global::TableEltSuper::(compiling_global::AbsTableElt::compile_macros)"
void compiling_global___TableEltSuper___compile_macros(val_t p0, val_t p1, val_t p2);
typedef void (*compiling_global___TableEltSuper___compile_macros_t)(val_t p0, val_t p1, val_t p2);
#define LOCATE_compiling_global___TableEltSuper___compile_to_c "compiling_global::TableEltSuper::(compiling_global::TableElt::compile_to_c)"
val_t compiling_global___TableEltSuper___compile_to_c(val_t p0, val_t p1, val_t p2);
typedef val_t (*compiling_global___TableEltSuper___compile_to_c_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_TableEltAttr_table_computation___TableEltProp___init(val_t p0);
#define LOCATE_compiling_global___TableEltAttr___compile_macros "compiling_global::TableEltAttr::(compiling_global::AbsTableElt::compile_macros)"
void compiling_global___TableEltAttr___compile_macros(val_t p0, val_t p1, val_t p2);
typedef void (*compiling_global___TableEltAttr___compile_macros_t)(val_t p0, val_t p1, val_t p2);
#define LOCATE_compiling_global___TableEltAttr___compile_to_c "compiling_global::TableEltAttr::(compiling_global::TableElt::compile_to_c)"
val_t compiling_global___TableEltAttr___compile_to_c(val_t p0, val_t p1, val_t p2);
typedef val_t (*compiling_global___TableEltAttr___compile_to_c_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_AbsTableEltClass_table_computation___AbsTableEltClass___init(val_t p0);
#define LOCATE_compiling_global___AbsTableEltClass___compile_macros "compiling_global::AbsTableEltClass::(compiling_global::AbsTableElt::compile_macros)"
void compiling_global___AbsTableEltClass___compile_macros(val_t p0, val_t p1, val_t p2);
typedef void (*compiling_global___AbsTableEltClass___compile_macros_t)(val_t p0, val_t p1, val_t p2);
#define LOCATE_compiling_global___AbsTableEltClass___symbol "compiling_global::AbsTableEltClass::symbol"
val_t compiling_global___AbsTableEltClass___symbol(val_t p0);
typedef val_t (*compiling_global___AbsTableEltClass___symbol_t)(val_t p0);
val_t NEW_TableEltClassId_table_computation___AbsTableEltClass___init(val_t p0);
#define LOCATE_compiling_global___TableEltClassId___value "compiling_global::TableEltClassId::(compiling_global::ModuleTableElt::value)"
val_t compiling_global___TableEltClassId___value(val_t p0, val_t p1);
typedef val_t (*compiling_global___TableEltClassId___value_t)(val_t p0, val_t p1);
#define LOCATE_compiling_global___TableEltClassId___symbol "compiling_global::TableEltClassId::(compiling_global::AbsTableEltClass::symbol)"
val_t compiling_global___TableEltClassId___symbol(val_t p0);
typedef val_t (*compiling_global___TableEltClassId___symbol_t)(val_t p0);
val_t NEW_TableEltClassInitTable_table_computation___AbsTableEltClass___init(val_t p0);
#define LOCATE_compiling_global___TableEltClassInitTable___compile_to_c "compiling_global::TableEltClassInitTable::(compiling_global::TableElt::compile_to_c)"
val_t compiling_global___TableEltClassInitTable___compile_to_c(val_t p0, val_t p1, val_t p2);
typedef val_t (*compiling_global___TableEltClassInitTable___compile_to_c_t)(val_t p0, val_t p1, val_t p2);
#define LOCATE_compiling_global___TableEltClassInitTable___symbol "compiling_global::TableEltClassInitTable::(compiling_global::AbsTableEltClass::symbol)"
val_t compiling_global___TableEltClassInitTable___symbol(val_t p0);
typedef val_t (*compiling_global___TableEltClassInitTable___symbol_t)(val_t p0);
val_t NEW_TableEltClassColor_table_computation___AbsTableEltClass___init(val_t p0);
#define LOCATE_compiling_global___TableEltClassColor___compile_to_c "compiling_global::TableEltClassColor::(compiling_global::TableElt::compile_to_c)"
val_t compiling_global___TableEltClassColor___compile_to_c(val_t p0, val_t p1, val_t p2);
typedef val_t (*compiling_global___TableEltClassColor___compile_to_c_t)(val_t p0, val_t p1, val_t p2);
#define LOCATE_compiling_global___TableEltClassColor___symbol "compiling_global::TableEltClassColor::(compiling_global::AbsTableEltClass::symbol)"
val_t compiling_global___TableEltClassColor___symbol(val_t p0);
typedef val_t (*compiling_global___TableEltClassColor___symbol_t)(val_t p0);
#define LOCATE_compiling_global___TableEltClassColor___value "compiling_global::TableEltClassColor::(compiling_global::ModuleTableElt::value)"
val_t compiling_global___TableEltClassColor___value(val_t p0, val_t p1);
typedef val_t (*compiling_global___TableEltClassColor___value_t)(val_t p0, val_t p1);
val_t NEW_TableEltComposite_table_computation___TableEltComposite___init(val_t p0);
#define LOCATE_compiling_global___TableEltComposite___compile_to_c "compiling_global::TableEltComposite::(compiling_global::TableElt::compile_to_c)"
val_t compiling_global___TableEltComposite___compile_to_c(val_t p0, val_t p1, val_t p2);
typedef val_t (*compiling_global___TableEltComposite___compile_to_c_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_TableEltClassSelfId_table_computation___AbsTableElt___init();
#define LOCATE_compiling_global___TableEltClassSelfId___compile_to_c "compiling_global::TableEltClassSelfId::(compiling_global::TableElt::compile_to_c)"
val_t compiling_global___TableEltClassSelfId___compile_to_c(val_t p0, val_t p1, val_t p2);
typedef val_t (*compiling_global___TableEltClassSelfId___compile_to_c_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_TableEltClassObjectSize_table_computation___AbsTableElt___init();
#define LOCATE_compiling_global___TableEltClassObjectSize___compile_to_c "compiling_global::TableEltClassObjectSize::(compiling_global::TableElt::compile_to_c)"
val_t compiling_global___TableEltClassObjectSize___compile_to_c(val_t p0, val_t p1, val_t p2);
typedef val_t (*compiling_global___TableEltClassObjectSize___compile_to_c_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_TableEltObjectId_table_computation___AbsTableElt___init();
#define LOCATE_compiling_global___TableEltObjectId___compile_to_c "compiling_global::TableEltObjectId::(compiling_global::TableElt::compile_to_c)"
val_t compiling_global___TableEltObjectId___compile_to_c(val_t p0, val_t p1, val_t p2);
typedef val_t (*compiling_global___TableEltObjectId___compile_to_c_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_TableEltVftPointer_table_computation___AbsTableElt___init();
#define LOCATE_compiling_global___TableEltVftPointer___compile_to_c "compiling_global::TableEltVftPointer::(compiling_global::TableElt::compile_to_c)"
val_t compiling_global___TableEltVftPointer___compile_to_c(val_t p0, val_t p1, val_t p2);
typedef val_t (*compiling_global___TableEltVftPointer___compile_to_c_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_MMLocalClass_abstractmetamodel___MMLocalClass___init(val_t p0, val_t p1, val_t p2);
#define LOCATE_compiling_global___MMLocalClass___declare_tables_to_c "compiling_global::MMLocalClass::declare_tables_to_c"
void compiling_global___MMLocalClass___declare_tables_to_c(val_t p0, val_t p1);
typedef void (*compiling_global___MMLocalClass___declare_tables_to_c_t)(val_t p0, val_t p1);
#define LOCATE_compiling_global___MMLocalClass___generate_allocation_iroutines "compiling_global::MMLocalClass::generate_allocation_iroutines"
void compiling_global___MMLocalClass___generate_allocation_iroutines(val_t p0, val_t p1);
typedef void (*compiling_global___MMLocalClass___generate_allocation_iroutines_t)(val_t p0, val_t p1);
#define LOCATE_compiling_global___MMLocalClass___compile_tables_to_c "compiling_global::MMLocalClass::compile_tables_to_c"
void compiling_global___MMLocalClass___compile_tables_to_c(val_t p0, val_t p1);
typedef void (*compiling_global___MMLocalClass___compile_tables_to_c_t)(val_t p0, val_t p1);
val_t NEW_MMMethod_abstractmetamodel___MMLocalProperty___init(val_t p0, val_t p1);
#define LOCATE_compiling_global___MMMethod___compile_property_to_c "compiling_global::MMMethod::compile_property_to_c"
void compiling_global___MMMethod___compile_property_to_c(val_t p0, val_t p1);
typedef void (*compiling_global___MMMethod___compile_property_to_c_t)(val_t p0, val_t p1);
#endif
