# Lexer and its tokens.
# This file was generated by SableCC (http://www.sablecc.org/).
package lexer

import parser_nodes

redef class Token
    readable writable attr _text: String 
    readable attr _filename: String 
    readable attr _line: Int 
    readable attr _pos: Int 
    
    meth parser_index: Int is abstract

    redef meth to_s: String do
        return "'{_text}'"
    end
end

redef class TEol
    redef meth parser_index: Int
    do
    	return 0
    end

    init init_tk(text: String, fname: String, line: Int, pos: Int)
    do
        _text = text
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TComment
    redef meth parser_index: Int
    do
    	return 1
    end

    init init_tk(text: String, fname: String, line: Int, pos: Int)
    do
        _text = text
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwpackage
    redef meth parser_index: Int
    do
    	return 2
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "package"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwimport
    redef meth parser_index: Int
    do
    	return 3
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "import"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwclass
    redef meth parser_index: Int
    do
    	return 4
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "class"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwabstract
    redef meth parser_index: Int
    do
    	return 5
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "abstract"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwinterface
    redef meth parser_index: Int
    do
    	return 6
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "interface"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwuniversal
    redef meth parser_index: Int
    do
    	return 7
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "universal"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwspecial
    redef meth parser_index: Int
    do
    	return 8
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "special"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwend
    redef meth parser_index: Int
    do
    	return 9
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "end"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwmeth
    redef meth parser_index: Int
    do
    	return 10
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "meth"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwtype
    redef meth parser_index: Int
    do
    	return 11
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "type"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwattr
    redef meth parser_index: Int
    do
    	return 12
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "attr"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwinit
    redef meth parser_index: Int
    do
    	return 13
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "init"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwredef
    redef meth parser_index: Int
    do
    	return 14
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "redef"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwis
    redef meth parser_index: Int
    do
    	return 15
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "is"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwdo
    redef meth parser_index: Int
    do
    	return 16
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "do"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwreadable
    redef meth parser_index: Int
    do
    	return 17
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "readable"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwwritable
    redef meth parser_index: Int
    do
    	return 18
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "writable"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwvar
    redef meth parser_index: Int
    do
    	return 19
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "var"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwintern
    redef meth parser_index: Int
    do
    	return 20
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "intern"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwextern
    redef meth parser_index: Int
    do
    	return 21
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "extern"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwprotected
    redef meth parser_index: Int
    do
    	return 22
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "protected"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwprivate
    redef meth parser_index: Int
    do
    	return 23
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "private"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwintrude
    redef meth parser_index: Int
    do
    	return 24
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "intrude"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwif
    redef meth parser_index: Int
    do
    	return 25
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "if"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwthen
    redef meth parser_index: Int
    do
    	return 26
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "then"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwelse
    redef meth parser_index: Int
    do
    	return 27
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "else"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwwhile
    redef meth parser_index: Int
    do
    	return 28
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "while"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwfor
    redef meth parser_index: Int
    do
    	return 29
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "for"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwin
    redef meth parser_index: Int
    do
    	return 30
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "in"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwand
    redef meth parser_index: Int
    do
    	return 31
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "and"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwor
    redef meth parser_index: Int
    do
    	return 32
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "or"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwnot
    redef meth parser_index: Int
    do
    	return 33
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "not"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwreturn
    redef meth parser_index: Int
    do
    	return 34
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "return"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwcontinue
    redef meth parser_index: Int
    do
    	return 35
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "continue"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwbreak
    redef meth parser_index: Int
    do
    	return 36
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "break"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwabort
    redef meth parser_index: Int
    do
    	return 37
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "abort"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwassert
    redef meth parser_index: Int
    do
    	return 38
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "assert"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwnew
    redef meth parser_index: Int
    do
    	return 39
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "new"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwisa
    redef meth parser_index: Int
    do
    	return 40
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "isa"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwonce
    redef meth parser_index: Int
    do
    	return 41
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "once"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwsuper
    redef meth parser_index: Int
    do
    	return 42
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "super"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwself
    redef meth parser_index: Int
    do
    	return 43
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "self"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwtrue
    redef meth parser_index: Int
    do
    	return 44
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "true"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwfalse
    redef meth parser_index: Int
    do
    	return 45
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "false"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwnull
    redef meth parser_index: Int
    do
    	return 46
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "null"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwas
    redef meth parser_index: Int
    do
    	return 47
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "as"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TKwwith
    redef meth parser_index: Int
    do
    	return 48
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "with"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TOpar
    redef meth parser_index: Int
    do
    	return 49
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "("
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TCpar
    redef meth parser_index: Int
    do
    	return 50
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once ")"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TObra
    redef meth parser_index: Int
    do
    	return 51
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "["
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TCbra
    redef meth parser_index: Int
    do
    	return 52
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "]"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TComma
    redef meth parser_index: Int
    do
    	return 53
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once ","
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TColumn
    redef meth parser_index: Int
    do
    	return 54
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once ":"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TQuad
    redef meth parser_index: Int
    do
    	return 55
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "::"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TAssign
    redef meth parser_index: Int
    do
    	return 56
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "="
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TPluseq
    redef meth parser_index: Int
    do
    	return 57
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "+="
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TMinuseq
    redef meth parser_index: Int
    do
    	return 58
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "-="
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TDotdotdot
    redef meth parser_index: Int
    do
    	return 59
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "..."
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TDotdot
    redef meth parser_index: Int
    do
    	return 60
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once ".."
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TDot
    redef meth parser_index: Int
    do
    	return 61
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "."
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TPlus
    redef meth parser_index: Int
    do
    	return 62
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "+"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TMinus
    redef meth parser_index: Int
    do
    	return 63
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "-"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TStar
    redef meth parser_index: Int
    do
    	return 64
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "*"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TSlash
    redef meth parser_index: Int
    do
    	return 65
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "/"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TPercent
    redef meth parser_index: Int
    do
    	return 66
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "%"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TEq
    redef meth parser_index: Int
    do
    	return 67
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "=="
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TNe
    redef meth parser_index: Int
    do
    	return 68
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "!="
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TLt
    redef meth parser_index: Int
    do
    	return 69
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "<"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TLe
    redef meth parser_index: Int
    do
    	return 70
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "<="
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TGt
    redef meth parser_index: Int
    do
    	return 71
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once ">"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TGe
    redef meth parser_index: Int
    do
    	return 72
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once ">="
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TStarship
    redef meth parser_index: Int
    do
    	return 73
    end

    init init_tk(fname: String, line: Int, pos: Int)
    do
        _text = once "<=>"
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TClassid
    redef meth parser_index: Int
    do
    	return 74
    end

    init init_tk(text: String, fname: String, line: Int, pos: Int)
    do
        _text = text
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TId
    redef meth parser_index: Int
    do
    	return 75
    end

    init init_tk(text: String, fname: String, line: Int, pos: Int)
    do
        _text = text
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TAttrid
    redef meth parser_index: Int
    do
    	return 76
    end

    init init_tk(text: String, fname: String, line: Int, pos: Int)
    do
        _text = text
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TNumber
    redef meth parser_index: Int
    do
    	return 77
    end

    init init_tk(text: String, fname: String, line: Int, pos: Int)
    do
        _text = text
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TFloat
    redef meth parser_index: Int
    do
    	return 78
    end

    init init_tk(text: String, fname: String, line: Int, pos: Int)
    do
        _text = text
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TChar
    redef meth parser_index: Int
    do
    	return 79
    end

    init init_tk(text: String, fname: String, line: Int, pos: Int)
    do
        _text = text
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TString
    redef meth parser_index: Int
    do
    	return 80
    end

    init init_tk(text: String, fname: String, line: Int, pos: Int)
    do
        _text = text
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TStartString
    redef meth parser_index: Int
    do
    	return 81
    end

    init init_tk(text: String, fname: String, line: Int, pos: Int)
    do
        _text = text
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TMidString
    redef meth parser_index: Int
    do
    	return 82
    end

    init init_tk(text: String, fname: String, line: Int, pos: Int)
    do
        _text = text
	_filename = fname
        _line = line
        _pos = pos
    end
end

redef class TEndString
    redef meth parser_index: Int
    do
    	return 83
    end

    init init_tk(text: String, fname: String, line: Int, pos: Int)
    do
        _text = text
	_filename = fname
        _line = line
        _pos = pos
    end
end


redef class EOF 
    redef meth parser_index: Int
    do
    	return 84
    end
    
    init(fname: String, line: Int, pos: Int)
    do
    	_filename = fname
        _text = ""
        _line = line
        _pos = pos
    end
end

redef class PError
    readable writable attr _message: String 
    
    init init_error(fname: String, line: Int, pos: Int, message: String)
    do
        init(fname, line, pos)
	_message = message
    end
end


# The lexer extract NIT tokens from an input stream.
# It is better user with the Parser
class Lexer
	# Last peeked token
	attr _token: Token

	# Lexer current state
	attr _state: Int = 0

	# Name of the stream (as given to tokens)
	readable attr _filename: String 

	# Input stream where character are read
	attr _stream: IStream

	# Pushback buffer to store unread character
	attr _stream_buf: String

	# Number of character stored in the pushback buffer
	attr _stream_pos: Int

	# Current line number in the input stream
	attr _line: Int = 0

	# Current column in the input stream
	attr _pos: Int = 0

	# Was the last character a cariage-return?
	attr _cr: Bool = false

	# If the end of stream?
	attr _eof: Bool = false

	# Current working text read from the input stream
	attr _text: String

	# Constante state values
	private meth state_initial: Int do return 0 end

	# Create a new lexer for a stream (and a name)
	init(stream: IStream, fname: String)
	do
		_filename = fname
		_text = new String
		_stream = stream
		_stream_pos = -1
		_stream_buf = new String
		build_goto_table
		build_accept_table
	end

	# Give the next token (but do not consume it)
	meth peek: Token
	do
		while _token == null do
			_token = get_token
		end
		return _token
	end

	# Give and consume the next token
	meth next: Token
	do
		var result = _token
		while result == null do
			result = get_token
		end
		_token = null
		return result
	end

	# Get a token, or null if it is discarded
	private meth get_token: Token
	do
		var dfa_state = 0

		var start_pos = _pos
		var start_line = _line

		var accept_state = -1
		var accept_token = -1
		var accept_length = -1
		var accept_pos = -1
		var accept_line = -1

		var goto_table = _goto_table[_state]
		var accept = _accept_table[_state]
		_text.clear

		while true do
			var c = get_char

			if c != -1 then
				if c == 10 then
					if _cr then
						_cr = false
					else
						_line = _line + 1
						_pos = 0
					end
				else if c == 13 then
					_line = _line + 1
					_pos = 0
					_cr = true
				else
					_pos = _pos + 1
					_cr = false
				end

				_text.add(c.ascii)

				var first_loop = true # aka until
				while dfa_state < -1 or first_loop do
					var old_state = dfa_state
					if dfa_state < -1 then
						old_state = -2 - dfa_state
					end

					dfa_state = -1

					var tmp1 = goto_table[old_state]
					var low = 0
					var high = tmp1.length - 1

					while low <= high do
						var middle = (low + high) / 2
						var tmp2 = tmp1[middle]

						if c < tmp2[0] then
							high = middle - 1
						else if c > tmp2[1] then
							low = middle + 1
						else
							dfa_state = tmp2[2]
							low = high + 1 # aka break
						end
					end
					first_loop = false # aka until
				end
			else
				dfa_state = -1
			end

			if dfa_state >= 0 then
				if accept[dfa_state] != -1 then
					accept_state = dfa_state
					accept_token = accept[dfa_state]
					accept_length = _text.length
					accept_pos = _pos
					accept_line = _line
				end
			else
				if accept_state != -1 then
					if accept_token == 0 then
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return null
					end
					if accept_token == 1 then
	    					var token_text = _text.substring(0, accept_length)
						var token = new TEol.init_tk(token_text, _filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 2 then
	    					var token_text = _text.substring(0, accept_length)
						var token = new TComment.init_tk(token_text, _filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 3 then
						var token = new TKwpackage.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 4 then
						var token = new TKwimport.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 5 then
						var token = new TKwclass.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 6 then
						var token = new TKwabstract.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 7 then
						var token = new TKwinterface.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 8 then
						var token = new TKwuniversal.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 9 then
						var token = new TKwspecial.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 10 then
						var token = new TKwend.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 11 then
						var token = new TKwmeth.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 12 then
						var token = new TKwtype.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 13 then
						var token = new TKwattr.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 14 then
						var token = new TKwinit.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 15 then
						var token = new TKwredef.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 16 then
						var token = new TKwis.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 17 then
						var token = new TKwdo.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 18 then
						var token = new TKwreadable.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 19 then
						var token = new TKwwritable.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 20 then
						var token = new TKwvar.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 21 then
						var token = new TKwintern.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 22 then
						var token = new TKwextern.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 23 then
						var token = new TKwprotected.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 24 then
						var token = new TKwprivate.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 25 then
						var token = new TKwintrude.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 26 then
						var token = new TKwif.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 27 then
						var token = new TKwthen.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 28 then
						var token = new TKwelse.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 29 then
						var token = new TKwwhile.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 30 then
						var token = new TKwfor.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 31 then
						var token = new TKwin.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 32 then
						var token = new TKwand.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 33 then
						var token = new TKwor.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 34 then
						var token = new TKwnot.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 35 then
						var token = new TKwreturn.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 36 then
						var token = new TKwcontinue.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 37 then
						var token = new TKwbreak.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 38 then
						var token = new TKwabort.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 39 then
						var token = new TKwassert.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 40 then
						var token = new TKwnew.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 41 then
						var token = new TKwisa.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 42 then
						var token = new TKwonce.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 43 then
						var token = new TKwsuper.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 44 then
						var token = new TKwself.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 45 then
						var token = new TKwtrue.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 46 then
						var token = new TKwfalse.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 47 then
						var token = new TKwnull.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 48 then
						var token = new TKwas.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 49 then
						var token = new TKwwith.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 50 then
						var token = new TOpar.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 51 then
						var token = new TCpar.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 52 then
						var token = new TObra.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 53 then
						var token = new TCbra.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 54 then
						var token = new TComma.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 55 then
						var token = new TColumn.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 56 then
						var token = new TQuad.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 57 then
						var token = new TAssign.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 58 then
						var token = new TPluseq.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 59 then
						var token = new TMinuseq.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 60 then
						var token = new TDotdotdot.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 61 then
						var token = new TDotdot.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 62 then
						var token = new TDot.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 63 then
						var token = new TPlus.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 64 then
						var token = new TMinus.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 65 then
						var token = new TStar.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 66 then
						var token = new TSlash.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 67 then
						var token = new TPercent.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 68 then
						var token = new TEq.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 69 then
						var token = new TNe.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 70 then
						var token = new TLt.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 71 then
						var token = new TLe.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 72 then
						var token = new TGt.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 73 then
						var token = new TGe.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 74 then
						var token = new TStarship.init_tk(_filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 75 then
	    					var token_text = _text.substring(0, accept_length)
						var token = new TClassid.init_tk(token_text, _filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 76 then
	    					var token_text = _text.substring(0, accept_length)
						var token = new TId.init_tk(token_text, _filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 77 then
	    					var token_text = _text.substring(0, accept_length)
						var token = new TAttrid.init_tk(token_text, _filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 78 then
	    					var token_text = _text.substring(0, accept_length)
						var token = new TNumber.init_tk(token_text, _filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 79 then
	    					var token_text = _text.substring(0, accept_length)
						var token = new TFloat.init_tk(token_text, _filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 80 then
	    					var token_text = _text.substring(0, accept_length)
						var token = new TChar.init_tk(token_text, _filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 81 then
	    					var token_text = _text.substring(0, accept_length)
						var token = new TString.init_tk(token_text, _filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 82 then
	    					var token_text = _text.substring(0, accept_length)
						var token = new TStartString.init_tk(token_text, _filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 83 then
	    					var token_text = _text.substring(0, accept_length)
						var token = new TMidString.init_tk(token_text, _filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
					if accept_token == 84 then
	    					var token_text = _text.substring(0, accept_length)
						var token = new TEndString.init_tk(token_text, _filename, start_line + 1, start_pos + 1)
						push_back(accept_length)
						_pos = accept_pos
						_line = accept_line
						return token
					end
				else
					if _text.length > 0 then
						var token = new PError.init_error(_filename, start_line + 1, start_pos + 1, "Unknown token: {_text}")
						return token
					else
						var token = new EOF(_filename, start_line + 1, start_pos + 1)
						return token
					end
				end
			end
		end
		return null
	end

	# Read the next character.
	# The character is read from the stream of from the pushback buffer.
	private meth get_char: Int
	do
		if _eof then
			return -1
		end

		var result: Int

		var sp = _stream_pos
		if sp >= 0 then
			var res = _stream_buf[_stream_pos]
			_stream_pos = sp - 1
			result = res.ascii
		else
			result = _stream.read_char
		end

		if result == -1 then
			_eof = true
		end

		return result
	end

	# Unread some characters.
	# Unread characters are stored in the pushback buffer.
	private meth push_back(accept_length: Int)
	do
		var length = _text.length
		var i = length - 1
		while i >= accept_length do
			_eof = false
			_stream_pos = _stream_pos + 1
			_stream_buf[_stream_pos] = _text[i]
			i = i - 1
		end
	end

	attr _goto_table: Array[Array[Array[Array[Int]]]]
	private meth build_goto_table
	do
		_goto_table = once [
			[
				[
					[9, 9, 1] ,
					[10, 10, 2] ,
					[13, 13, 3] ,
					[32, 32, 4] ,
					[33, 33, 5] ,
					[34, 34, 6] ,
					[35, 35, 7] ,
					[37, 37, 8] ,
					[39, 39, 9] ,
					[40, 40, 10] ,
					[41, 41, 11] ,
					[42, 42, 12] ,
					[43, 43, 13] ,
					[44, 44, 14] ,
					[45, 45, 15] ,
					[46, 46, 16] ,
					[47, 47, 17] ,
					[48, 57, 18] ,
					[58, 58, 19] ,
					[60, 60, 20] ,
					[61, 61, 21] ,
					[62, 62, 22] ,
					[65, 90, 23] ,
					[91, 91, 24] ,
					[93, 93, 25] ,
					[95, 95, 26] ,
					[97, 97, 27] ,
					[98, 98, 28] ,
					[99, 99, 29] ,
					[100, 100, 30] ,
					[101, 101, 31] ,
					[102, 102, 32] ,
					[103, 104, 33] ,
					[105, 105, 34] ,
					[106, 108, 33] ,
					[109, 109, 35] ,
					[110, 110, 36] ,
					[111, 111, 37] ,
					[112, 112, 38] ,
					[113, 113, 33] ,
					[114, 114, 39] ,
					[115, 115, 40] ,
					[116, 116, 41] ,
					[117, 117, 42] ,
					[118, 118, 43] ,
					[119, 119, 44] ,
					[120, 122, 33] ,
					[125, 125, 45] 
				] ,
				[
					[9, 9, 1] ,
					[32, 32, 4] 
				] ,
				nil_array ,
				[
					[10, 10, 46] 
				] ,
				[
					[9, 32, -3] 
				] ,
				[
					[61, 61, 47] 
				] ,
				[
					[0, 9, 48] ,
					[11, 12, 48] ,
					[14, 33, 48] ,
					[34, 34, 49] ,
					[35, 91, 48] ,
					[92, 92, 50] ,
					[93, 122, 48] ,
					[123, 123, 51] ,
					[124, 255, 48] 
				] ,
				[
					[0, 9, 52] ,
					[10, 10, 53] ,
					[11, 12, 52] ,
					[13, 13, 54] ,
					[14, 255, 52] 
				] ,
				nil_array ,
				[
					[0, 9, 55] ,
					[11, 12, 55] ,
					[14, 38, 55] ,
					[39, 39, 56] ,
					[40, 255, 55] 
				] ,
				nil_array ,
				nil_array ,
				nil_array ,
				[
					[61, 61, 57] 
				] ,
				nil_array ,
				[
					[61, 61, 58] 
				] ,
				[
					[46, 46, 59] ,
					[48, 57, 60] 
				] ,
				nil_array ,
				[
					[46, 46, 61] ,
					[48, 57, 18] 
				] ,
				[
					[58, 58, 62] 
				] ,
				[
					[61, 61, 63] 
				] ,
				[
					[61, 61, 64] 
				] ,
				[
					[61, 61, 65] 
				] ,
				[
					[48, 57, 66] ,
					[65, 90, 67] ,
					[95, 95, 68] ,
					[97, 122, 69] 
				] ,
				nil_array ,
				nil_array ,
				[
					[97, 122, 70] 
				] ,
				[
					[48, 57, 71] ,
					[65, 90, 72] ,
					[95, 95, 73] ,
					[97, 97, 74] ,
					[98, 98, 75] ,
					[99, 109, 74] ,
					[110, 110, 76] ,
					[111, 114, 74] ,
					[115, 115, 77] ,
					[116, 116, 78] ,
					[117, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 113, 74] ,
					[114, 114, 79] ,
					[115, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 107, 74] ,
					[108, 108, 80] ,
					[109, 110, 74] ,
					[111, 111, 81] ,
					[112, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 110, 74] ,
					[111, 111, 82] ,
					[112, 122, 74] 
				] ,
				[
					[48, 107, -31] ,
					[108, 108, 83] ,
					[109, 109, 74] ,
					[110, 110, 84] ,
					[111, 119, 74] ,
					[120, 120, 85] ,
					[121, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 97, 86] ,
					[98, 110, 74] ,
					[111, 111, 87] ,
					[112, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 101, 74] ,
					[102, 102, 88] ,
					[103, 108, 74] ,
					[109, 109, 89] ,
					[110, 110, 90] ,
					[111, 114, 74] ,
					[115, 115, 91] ,
					[116, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 100, 74] ,
					[101, 101, 92] ,
					[102, 122, 74] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 93] ,
					[102, 110, 74] ,
					[111, 111, 94] ,
					[112, 116, 74] ,
					[117, 117, 95] ,
					[118, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 109, 74] ,
					[110, 110, 96] ,
					[111, 113, 74] ,
					[114, 114, 97] ,
					[115, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 97, 98] ,
					[98, 113, 74] ,
					[114, 114, 99] ,
					[115, 122, 74] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 100] ,
					[102, 122, 74] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 101] ,
					[102, 111, 74] ,
					[112, 112, 102] ,
					[113, 116, 74] ,
					[117, 117, 103] ,
					[118, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 103, 74] ,
					[104, 104, 104] ,
					[105, 113, 74] ,
					[114, 114, 105] ,
					[115, 120, 74] ,
					[121, 121, 106] ,
					[122, 122, 74] 
				] ,
				[
					[48, 109, -39] ,
					[110, 110, 107] ,
					[111, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 97, 108] ,
					[98, 122, 74] 
				] ,
				[
					[48, 103, -43] ,
					[104, 104, 109] ,
					[105, 105, 110] ,
					[106, 113, 74] ,
					[114, 114, 111] ,
					[115, 122, 74] 
				] ,
				[
					[0, 9, 112] ,
					[11, 12, 112] ,
					[14, 33, 112] ,
					[34, 34, 113] ,
					[35, 91, 112] ,
					[92, 92, 114] ,
					[93, 122, 112] ,
					[123, 123, 115] ,
					[124, 255, 112] 
				] ,
				nil_array ,
				nil_array ,
				[
					[0, 255, -8] 
				] ,
				nil_array ,
				[
					[0, 9, 116] ,
					[11, 12, 116] ,
					[14, 255, 116] 
				] ,
				nil_array ,
				[
					[0, 255, -9] 
				] ,
				nil_array ,
				[
					[10, 10, 117] 
				] ,
				[
					[0, 255, -11] 
				] ,
				nil_array ,
				nil_array ,
				nil_array ,
				[
					[46, 46, 118] 
				] ,
				[
					[48, 57, 60] 
				] ,
				[
					[48, 57, 60] 
				] ,
				nil_array ,
				[
					[62, 62, 119] 
				] ,
				nil_array ,
				nil_array ,
				[
					[48, 122, -25] 
				] ,
				[
					[48, 122, -25] 
				] ,
				[
					[48, 122, -25] 
				] ,
				[
					[48, 122, -25] 
				] ,
				[
					[48, 57, 120] ,
					[65, 90, 121] ,
					[95, 95, 122] ,
					[97, 122, 123] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 110, -32] ,
					[111, 111, 124] ,
					[112, 114, 74] ,
					[115, 115, 125] ,
					[116, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 99, 74] ,
					[100, 100, 126] ,
					[101, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 114, 74] ,
					[115, 115, 127] ,
					[116, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 115, 74] ,
					[116, 116, 128] ,
					[117, 122, 74] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 129] ,
					[102, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 97, 130] ,
					[98, 122, 74] 
				] ,
				[
					[48, 109, -39] ,
					[110, 110, 131] ,
					[111, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 114, -79] ,
					[115, 115, 132] ,
					[116, 122, 74] 
				] ,
				[
					[48, 99, -78] ,
					[100, 100, 133] ,
					[101, 122, 74] 
				] ,
				[
					[48, 115, -80] ,
					[116, 116, 134] ,
					[117, 122, 74] 
				] ,
				[
					[48, 107, -31] ,
					[108, 108, 135] ,
					[109, 122, 74] 
				] ,
				[
					[48, 113, -30] ,
					[114, 114, 136] ,
					[115, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 95, -29] ,
					[97, 111, 74] ,
					[112, 112, 137] ,
					[113, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 104, 74] ,
					[105, 105, 138] ,
					[106, 115, 74] ,
					[116, 116, 139] ,
					[117, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 97, 140] ,
					[98, 122, 74] 
				] ,
				[
					[48, 115, -80] ,
					[116, 116, 141] ,
					[117, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 118, 74] ,
					[119, 119, 142] ,
					[120, 122, 74] 
				] ,
				[
					[48, 115, -80] ,
					[116, 116, 143] ,
					[117, 122, 74] 
				] ,
				[
					[48, 107, -31] ,
					[108, 108, 144] ,
					[109, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 98, 74] ,
					[99, 99, 145] ,
					[100, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 98, -98] ,
					[99, 99, 146] ,
					[100, 122, 74] 
				] ,
				[
					[48, 104, -92] ,
					[105, 105, 147] ,
					[106, 110, 74] ,
					[111, 111, 148] ,
					[112, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 97, 149] ,
					[98, 99, 74] ,
					[100, 100, 150] ,
					[101, 115, 74] ,
					[116, 116, 151] ,
					[117, 122, 74] 
				] ,
				[
					[48, 107, -31] ,
					[108, 108, 152] ,
					[109, 122, 74] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 153] ,
					[102, 122, 74] 
				] ,
				[
					[48, 111, -91] ,
					[112, 112, 154] ,
					[113, 122, 74] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 155] ,
					[102, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 116, 74] ,
					[117, 117, 156] ,
					[118, 122, 74] 
				] ,
				[
					[48, 111, -91] ,
					[112, 112, 157] ,
					[113, 122, 74] 
				] ,
				[
					[48, 104, -92] ,
					[105, 105, 158] ,
					[106, 122, 74] 
				] ,
				[
					[48, 113, -30] ,
					[114, 114, 159] ,
					[115, 122, 74] 
				] ,
				[
					[48, 104, -92] ,
					[105, 105, 160] ,
					[106, 122, 74] 
				] ,
				[
					[48, 115, -80] ,
					[116, 116, 161] ,
					[117, 122, 74] 
				] ,
				[
					[48, 104, -92] ,
					[105, 105, 162] ,
					[106, 122, 74] 
				] ,
				[
					[0, 255, -47] 
				] ,
				nil_array ,
				[
					[0, 9, 163] ,
					[11, 12, 163] ,
					[14, 255, 163] 
				] ,
				nil_array ,
				[
					[0, 255, -8] 
				] ,
				nil_array ,
				nil_array ,
				nil_array ,
				[
					[48, 122, -72] 
				] ,
				[
					[48, 122, -72] 
				] ,
				[
					[48, 122, -72] 
				] ,
				[
					[48, 122, -72] 
				] ,
				[
					[48, 113, -30] ,
					[114, 114, 164] ,
					[115, 122, 74] 
				] ,
				[
					[48, 115, -80] ,
					[116, 116, 165] ,
					[117, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 166] ,
					[102, 122, 74] 
				] ,
				[
					[48, 113, -30] ,
					[114, 114, 167] ,
					[115, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 97, 168] ,
					[98, 122, 74] 
				] ,
				[
					[48, 114, -79] ,
					[115, 115, 169] ,
					[116, 122, 74] 
				] ,
				[
					[48, 115, -80] ,
					[116, 116, 170] ,
					[117, 122, 74] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 171] ,
					[102, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 172] ,
					[102, 122, 74] 
				] ,
				[
					[48, 114, -79] ,
					[115, 115, 173] ,
					[116, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 110, -32] ,
					[111, 111, 174] ,
					[112, 122, 74] 
				] ,
				[
					[48, 115, -80] ,
					[116, 116, 175] ,
					[117, 122, 74] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 176] ,
					[102, 113, 74] ,
					[114, 114, 177] ,
					[115, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 103, -43] ,
					[104, 104, 178] ,
					[105, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 107, -31] ,
					[108, 108, 179] ,
					[109, 122, 74] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 180] ,
					[102, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 106, 74] ,
					[107, 107, 181] ,
					[108, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 117, 74] ,
					[118, 118, 182] ,
					[119, 122, 74] 
				] ,
				[
					[48, 115, -80] ,
					[116, 116, 183] ,
					[117, 122, 74] 
				] ,
				[
					[48, 99, -78] ,
					[100, 100, 184] ,
					[101, 122, 74] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 185] ,
					[102, 122, 74] 
				] ,
				[
					[48, 116, -107] ,
					[117, 117, 186] ,
					[118, 122, 74] 
				] ,
				[
					[48, 101, -36] ,
					[102, 102, 187] ,
					[103, 122, 74] 
				] ,
				[
					[48, 98, -98] ,
					[99, 99, 188] ,
					[100, 122, 74] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 189] ,
					[102, 122, 74] 
				] ,
				[
					[48, 109, -39] ,
					[110, 110, 190] ,
					[111, 122, 74] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 191] ,
					[102, 122, 74] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 192] ,
					[102, 122, 74] 
				] ,
				[
					[48, 117, -149] ,
					[118, 118, 193] ,
					[119, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 107, -31] ,
					[108, 108, 194] ,
					[109, 122, 74] 
				] ,
				[
					[48, 103, -43] ,
					[104, 104, 195] ,
					[105, 122, 74] 
				] ,
				[
					[48, 115, -80] ,
					[116, 116, 196] ,
					[117, 122, 74] 
				] ,
				[
					[0, 255, -47] 
				] ,
				[
					[48, 115, -80] ,
					[116, 116, 197] ,
					[117, 122, 74] 
				] ,
				[
					[48, 113, -30] ,
					[114, 114, 198] ,
					[115, 122, 74] 
				] ,
				[
					[48, 113, -30] ,
					[114, 114, 199] ,
					[115, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 106, -148] ,
					[107, 107, 200] ,
					[108, 122, 74] 
				] ,
				[
					[48, 114, -79] ,
					[115, 115, 201] ,
					[116, 122, 74] 
				] ,
				[
					[48, 104, -92] ,
					[105, 105, 202] ,
					[106, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 113, -30] ,
					[114, 114, 203] ,
					[115, 122, 74] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 204] ,
					[102, 122, 74] 
				] ,
				[
					[48, 113, -30] ,
					[114, 114, 205] ,
					[115, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 113, -30] ,
					[114, 114, 206] ,
					[115, 122, 74] 
				] ,
				[
					[48, 116, -107] ,
					[117, 117, 207] ,
					[118, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 95, -29] ,
					[97, 97, 208] ,
					[98, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 97, 209] ,
					[98, 122, 74] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 210] ,
					[102, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 97, 211] ,
					[98, 122, 74] 
				] ,
				[
					[48, 101, -36] ,
					[102, 102, 212] ,
					[103, 122, 74] 
				] ,
				[
					[48, 113, -30] ,
					[114, 114, 213] ,
					[115, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 104, -92] ,
					[105, 105, 214] ,
					[106, 122, 74] 
				] ,
				[
					[48, 113, -30] ,
					[114, 114, 215] ,
					[115, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 216] ,
					[102, 122, 74] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 217] ,
					[102, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 95, -29] ,
					[97, 97, 218] ,
					[98, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 95, -29] ,
					[97, 97, 219] ,
					[98, 122, 74] 
				] ,
				[
					[48, 115, -80] ,
					[116, 116, 220] ,
					[117, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 109, -39] ,
					[110, 110, 221] ,
					[111, 122, 74] 
				] ,
				[
					[48, 109, -39] ,
					[110, 110, 222] ,
					[111, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 115, -80] ,
					[116, 116, 223] ,
					[117, 122, 74] 
				] ,
				[
					[48, 101, -36] ,
					[102, 102, 224] ,
					[103, 109, 74] ,
					[110, 110, 225] ,
					[111, 122, 74] 
				] ,
				[
					[48, 99, -78] ,
					[100, 100, 226] ,
					[101, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 102, 74] ,
					[103, 103, 227] ,
					[104, 122, 74] 
				] ,
				[
					[48, 115, -80] ,
					[116, 116, 228] ,
					[117, 122, 74] 
				] ,
				[
					[48, 98, -98] ,
					[99, 99, 229] ,
					[100, 122, 74] 
				] ,
				[
					[48, 97, -29] ,
					[98, 98, 230] ,
					[99, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 109, -39] ,
					[110, 110, 231] ,
					[111, 122, 74] 
				] ,
				[
					[48, 95, -29] ,
					[97, 97, 232] ,
					[98, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 113, -30] ,
					[114, 114, 233] ,
					[115, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 97, -29] ,
					[98, 98, 234] ,
					[99, 122, 74] 
				] ,
				[
					[48, 98, -98] ,
					[99, 99, 235] ,
					[100, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 116, -107] ,
					[117, 117, 236] ,
					[118, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 95, -29] ,
					[97, 97, 237] ,
					[98, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 238] ,
					[102, 122, 74] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 239] ,
					[102, 122, 74] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 240] ,
					[102, 122, 74] 
				] ,
				[
					[48, 115, -80] ,
					[116, 116, 241] ,
					[117, 122, 74] 
				] ,
				[
					[48, 107, -31] ,
					[108, 108, 242] ,
					[109, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 107, -31] ,
					[108, 108, 243] ,
					[109, 122, 74] 
				] ,
				[
					[48, 114, -79] ,
					[115, 115, 244] ,
					[116, 122, 74] 
				] ,
				[
					[48, 107, -31] ,
					[108, 108, 245] ,
					[109, 122, 74] 
				] ,
				[
					[48, 115, -80] ,
					[116, 116, 246] ,
					[117, 122, 74] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 247] ,
					[102, 122, 74] 
				] ,
				[
					[48, 98, -98] ,
					[99, 99, 248] ,
					[100, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 249] ,
					[102, 122, 74] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 250] ,
					[102, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 95, -29] ,
					[97, 97, 251] ,
					[98, 122, 74] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 252] ,
					[102, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 100, -37] ,
					[101, 101, 253] ,
					[102, 122, 74] 
				] ,
				[
					[48, 99, -78] ,
					[100, 100, 254] ,
					[101, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 107, -31] ,
					[108, 108, 255] ,
					[109, 122, 74] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 122, -35] 
				] ,
				[
					[48, 122, -35] 
				] 
			] 
		]
	end
    
	private meth nil_array: Array[Array[Int]]
	do
		return once new Array[Array[Int]]
	end

	attr _accept_table: Array[Array[Int]]
	private meth build_accept_table do
		_accept_table = once [
            		[
				-1 , 0 , 1 , 1 , 0 , -1 , -1 , -1 , 67 , -1 , 50 , 51 , 65 , 63 , 54 , 64 , 62 , 66 , 78 , 55 , 70 , 57 , 72 , 75 , 52 , 53 , -1 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , -1 , 1 , 69 , -1 , 81 , -1 , 82 , -1 , 2 , 2 , -1 , 80 , 58 , 59 , 61 , 79 , -1 , 56 , 71 , 68 , 73 , 75 , 75 , 75 , 75 , 77 , 76 , 76 , 76 , 76 , 76 , 76 , 48 , 76 , 76 , 76 , 76 , 17 , 76 , 76 , 76 , 76 , 76 , 26 , 76 , 31 , 16 , 76 , 76 , 76 , 76 , 76 , 33 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , -1 , 84 , -1 , 83 , -1 , 2 , 60 , 74 , 77 , 77 , 77 , 77 , 76 , 76 , 32 , 76 , 76 , 76 , 76 , 76 , 76 , 10 , 76 , 76 , 30 , 76 , 76 , 76 , 41 , 76 , 40 , 34 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 20 , 76 , 76 , 76 , -1 , 76 , 76 , 76 , 13 , 76 , 76 , 76 , 28 , 76 , 76 , 76 , 14 , 76 , 76 , 11 , 47 , 42 , 76 , 76 , 76 , 76 , 76 , 76 , 44 , 76 , 76 , 27 , 45 , 12 , 76 , 76 , 49 , 76 , 38 , 76 , 76 , 37 , 5 , 76 , 76 , 46 , 76 , 76 , 76 , 76 , 76 , 76 , 76 , 15 , 76 , 76 , 43 , 76 , 29 , 76 , 76 , 39 , 76 , 22 , 4 , 76 , 21 , 76 , 76 , 76 , 76 , 76 , 35 , 76 , 76 , 76 , 76 , 76 , 76 , 25 , 3 , 24 , 76 , 76 , 9 , 76 , 76 , 6 , 36 , 76 , 76 , 18 , 76 , 19 , 7 , 23 , 8  

			] 
		]
	end
end

